/*!******************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************!*\
  !*** css ./node_modules/next/dist/build/webpack/loaders/css-loader/src/index.js??ruleSet[1].rules[14].oneOf[2].use[1]!./node_modules/next/dist/build/webpack/loaders/next-font-loader/index.js??ruleSet[1].rules[14].oneOf[2].use[2]!./node_modules/next/font/google/target.css?{"path":"src/app/layout.js","import":"Geist","arguments":[{"variable":"--font-geist-sans","subsets":["latin"]}],"variableName":"geistSans"} ***!
  \******************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************/
/* cyrillic */
@font-face {
  font-family: 'Geist';
  font-style: normal;
  font-weight: 100 900;
  font-display: swap;
  src: url(/_next/static/media/8d697b304b401681-s.woff2) format('woff2');
  unicode-range: U+0301, U+0400-045F, U+0490-0491, U+04B0-04B1, U+2116;
}
/* latin-ext */
@font-face {
  font-family: 'Geist';
  font-style: normal;
  font-weight: 100 900;
  font-display: swap;
  src: url(/_next/static/media/ba015fad6dcf6784-s.woff2) format('woff2');
  unicode-range: U+0100-02BA, U+02BD-02C5, U+02C7-02CC, U+02CE-02D7, U+02DD-02FF, U+0304, U+0308, U+0329, U+1D00-1DBF, U+1E00-1E9F, U+1EF2-1EFF, U+2020, U+20A0-20AB, U+20AD-20C0, U+2113, U+2C60-2C7F, U+A720-A7FF;
}
/* latin */
@font-face {
  font-family: 'Geist';
  font-style: normal;
  font-weight: 100 900;
  font-display: swap;
  src: url(/_next/static/media/4cf2300e9c8272f7-s.p.woff2) format('woff2');
  unicode-range: U+0000-00FF, U+0131, U+0152-0153, U+02BB-02BC, U+02C6, U+02DA, U+02DC, U+0304, U+0308, U+0329, U+2000-206F, U+20AC, U+2122, U+2191, U+2193, U+2212, U+2215, U+FEFF, U+FFFD;
}@font-face {font-family: 'Geist Fallback';src: local("Arial");ascent-override: 95.94%;descent-override: 28.16%;line-gap-override: 0.00%;size-adjust: 104.76%
}.__className_188709 {font-family: 'Geist', 'Geist Fallback';font-style: normal
}.__variable_188709 {--font-geist-sans: 'Geist', 'Geist Fallback'
}

/*!***********************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************!*\
  !*** css ./node_modules/next/dist/build/webpack/loaders/css-loader/src/index.js??ruleSet[1].rules[14].oneOf[2].use[1]!./node_modules/next/dist/build/webpack/loaders/next-font-loader/index.js??ruleSet[1].rules[14].oneOf[2].use[2]!./node_modules/next/font/google/target.css?{"path":"src/app/layout.js","import":"Geist_Mono","arguments":[{"variable":"--font-geist-mono","subsets":["latin"]}],"variableName":"geistMono"} ***!
  \***********************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************/
/* cyrillic */
@font-face {
  font-family: 'Geist Mono';
  font-style: normal;
  font-weight: 100 900;
  font-display: swap;
  src: url(/_next/static/media/9610d9e46709d722-s.woff2) format('woff2');
  unicode-range: U+0301, U+0400-045F, U+0490-0491, U+04B0-04B1, U+2116;
}
/* latin-ext */
@font-face {
  font-family: 'Geist Mono';
  font-style: normal;
  font-weight: 100 900;
  font-display: swap;
  src: url(/_next/static/media/747892c23ea88013-s.woff2) format('woff2');
  unicode-range: U+0100-02BA, U+02BD-02C5, U+02C7-02CC, U+02CE-02D7, U+02DD-02FF, U+0304, U+0308, U+0329, U+1D00-1DBF, U+1E00-1E9F, U+1EF2-1EFF, U+2020, U+20A0-20AB, U+20AD-20C0, U+2113, U+2C60-2C7F, U+A720-A7FF;
}
/* latin */
@font-face {
  font-family: 'Geist Mono';
  font-style: normal;
  font-weight: 100 900;
  font-display: swap;
  src: url(/_next/static/media/93f479601ee12b01-s.p.woff2) format('woff2');
  unicode-range: U+0000-00FF, U+0131, U+0152-0153, U+02BB-02BC, U+02C6, U+02DA, U+02DC, U+0304, U+0308, U+0329, U+2000-206F, U+20AC, U+2122, U+2191, U+2193, U+2212, U+2215, U+FEFF, U+FFFD;
}@font-face {font-family: 'Geist Mono Fallback';src: local("Arial");ascent-override: 74.67%;descent-override: 21.92%;line-gap-override: 0.00%;size-adjust: 134.59%
}.__className_9a8899 {font-family: 'Geist Mono', 'Geist Mono Fallback';font-style: normal
}.__variable_9a8899 {--font-geist-mono: 'Geist Mono', 'Geist Mono Fallback'
}

/*!*****************************************************************************************************************************************************************************************************************************************************************!*\
  !*** css ./node_modules/next/dist/build/webpack/loaders/css-loader/src/index.js??ruleSet[1].rules[14].oneOf[10].use[2]!./node_modules/next/dist/build/webpack/loaders/postcss-loader/src/index.js??ruleSet[1].rules[14].oneOf[10].use[3]!./src/app/globals.css ***!
  \*****************************************************************************************************************************************************************************************************************************************************************/
/*! tailwindcss v4.1.13 | MIT License | https://tailwindcss.com */
@layer properties;
.\@container\/card {
  container-type: inline-size;
  container-name: card;
}
.\@container\/card-header {
  container-type: inline-size;
  container-name: card-header;
}
.\@container\/field-group {
  container-type: inline-size;
  container-name: field-group;
}
.\@container\/main {
  container-type: inline-size;
  container-name: main;
}
.pointer-events-none {
  pointer-events: none;
}
.sr-only {
  position: absolute;
  width: 1px;
  height: 1px;
  padding: 0;
  margin: -1px;
  overflow: hidden;
  clip-path: inset(50%);
  white-space: nowrap;
  border-width: 0;
}
.absolute {
  position: absolute;
}
.fixed {
  position: fixed;
}
.relative {
  position: relative;
}
.static {
  position: static;
}
.sticky {
  position: sticky;
}
.inset-0 {
  inset: calc(var(--spacing) * 0);
}
.inset-x-0 {
  inset-inline: calc(var(--spacing) * 0);
}
.inset-y-0 {
  inset-block: calc(var(--spacing) * 0);
}
.top-0 {
  top: calc(var(--spacing) * 0);
}
.top-1\.5 {
  top: calc(var(--spacing) * 1.5);
}
.top-1\/2 {
  top: calc(1/2 * 100%);
}
.top-3\.5 {
  top: calc(var(--spacing) * 3.5);
}
.top-4 {
  top: calc(var(--spacing) * 4);
}
.right-0 {
  right: calc(var(--spacing) * 0);
}
.right-1 {
  right: calc(var(--spacing) * 1);
}
.right-2 {
  right: calc(var(--spacing) * 2);
}
.right-3 {
  right: calc(var(--spacing) * 3);
}
.right-4 {
  right: calc(var(--spacing) * 4);
}
.bottom-0 {
  bottom: calc(var(--spacing) * 0);
}
.left-0 {
  left: calc(var(--spacing) * 0);
}
.left-2 {
  left: calc(var(--spacing) * 2);
}
.z-0 {
  z-index: 0;
}
.z-10 {
  z-index: 10;
}
.z-20 {
  z-index: 20;
}
.z-50 {
  z-index: 50;
}
.col-start-2 {
  grid-column-start: 2;
}
.row-span-2 {
  grid-row: span 2 / span 2;
}
.row-start-1 {
  grid-row-start: 1;
}
.row-start-2 {
  grid-row-start: 2;
}
.-mx-1 {
  margin-inline: calc(var(--spacing) * -1);
}
.mx-2 {
  margin-inline: calc(var(--spacing) * 2);
}
.mx-3\.5 {
  margin-inline: calc(var(--spacing) * 3.5);
}
.mx-auto {
  margin-inline: auto;
}
.-my-2 {
  margin-block: calc(var(--spacing) * -2);
}
.my-0\.5 {
  margin-block: calc(var(--spacing) * 0.5);
}
.my-1 {
  margin-block: calc(var(--spacing) * 1);
}
.mt-2 {
  margin-top: calc(var(--spacing) * 2);
}
.mt-4 {
  margin-top: calc(var(--spacing) * 4);
}
.mt-auto {
  margin-top: auto;
}
.mb-2 {
  margin-bottom: calc(var(--spacing) * 2);
}
.mb-3 {
  margin-bottom: calc(var(--spacing) * 3);
}
.-ml-1 {
  margin-left: calc(var(--spacing) * -1);
}
.ml-4 {
  margin-left: calc(var(--spacing) * 4);
}
.ml-auto {
  margin-left: auto;
}
.line-clamp-1 {
  overflow: hidden;
  display: -webkit-box;
  -webkit-box-orient: vertical;
  -webkit-line-clamp: 1;
}
.block {
  display: block;
}
.contents {
  display: contents;
}
.flex {
  display: flex;
}
.grid {
  display: grid;
}
.hidden {
  display: none;
}
.inline-block {
  display: inline-block;
}
.inline-flex {
  display: inline-flex;
}
.table {
  display: table;
}
.table-caption {
  display: table-caption;
}
.table-cell {
  display: table-cell;
}
.table-row {
  display: table-row;
}
.aspect-auto {
  aspect-ratio: auto;
}
.aspect-square {
  aspect-ratio: 1 / 1;
}
.aspect-video {
  aspect-ratio: var(--aspect-video);
}
.\!size-4 {
  width: calc(var(--spacing) * 4) !important;
  height: calc(var(--spacing) * 4) !important;
}
.\!size-5 {
  width: calc(var(--spacing) * 5) !important;
  height: calc(var(--spacing) * 5) !important;
}
.size-2 {
  width: calc(var(--spacing) * 2);
  height: calc(var(--spacing) * 2);
}
.size-2\.5 {
  width: calc(var(--spacing) * 2.5);
  height: calc(var(--spacing) * 2.5);
}
.size-3 {
  width: calc(var(--spacing) * 3);
  height: calc(var(--spacing) * 3);
}
.size-3\.5 {
  width: calc(var(--spacing) * 3.5);
  height: calc(var(--spacing) * 3.5);
}
.size-4 {
  width: calc(var(--spacing) * 4);
  height: calc(var(--spacing) * 4);
}
.size-7 {
  width: calc(var(--spacing) * 7);
  height: calc(var(--spacing) * 7);
}
.size-8 {
  width: calc(var(--spacing) * 8);
  height: calc(var(--spacing) * 8);
}
.size-9 {
  width: calc(var(--spacing) * 9);
  height: calc(var(--spacing) * 9);
}
.size-10 {
  width: calc(var(--spacing) * 10);
  height: calc(var(--spacing) * 10);
}
.size-full {
  width: 100%;
  height: 100%;
}
.h-\(--header-height\) {
  height: var(--header-height);
}
.h-2 {
  height: calc(var(--spacing) * 2);
}
.h-2\.5 {
  height: calc(var(--spacing) * 2.5);
}
.h-4 {
  height: calc(var(--spacing) * 4);
}
.h-5 {
  height: calc(var(--spacing) * 5);
}
.h-7 {
  height: calc(var(--spacing) * 7);
}
.h-8 {
  height: calc(var(--spacing) * 8);
}
.h-9 {
  height: calc(var(--spacing) * 9);
}
.h-10 {
  height: calc(var(--spacing) * 10);
}
.h-12 {
  height: calc(var(--spacing) * 12);
}
.h-24 {
  height: calc(var(--spacing) * 24);
}
.h-\[1\.2rem\] {
  height: 1.2rem;
}
.h-\[95vh\] {
  height: 95vh;
}
.h-\[250px\] {
  height: 250px;
}
.h-\[calc\(100\%-1px\)\] {
  height: calc(100% - 1px);
}
.h-\[var\(--radix-select-trigger-height\)\] {
  height: var(--radix-select-trigger-height);
}
.h-auto {
  height: auto;
}
.h-full {
  height: 100%;
}
.h-px {
  height: 1px;
}
.h-svh {
  height: 100svh;
}
.max-h-\(--radix-dropdown-menu-content-available-height\) {
  max-height: var(--radix-dropdown-menu-content-available-height);
}
.max-h-\(--radix-select-content-available-height\) {
  max-height: var(--radix-select-content-available-height);
}
.min-h-0 {
  min-height: calc(var(--spacing) * 0);
}
.min-h-screen {
  min-height: 100vh;
}
.min-h-svh {
  min-height: 100svh;
}
.w-\(--radix-dropdown-menu-trigger-width\) {
  width: var(--radix-dropdown-menu-trigger-width);
}
.w-\(--sidebar-width\) {
  width: var(--sidebar-width);
}
.w-0 {
  width: calc(var(--spacing) * 0);
}
.w-1 {
  width: calc(var(--spacing) * 1);
}
.w-2 {
  width: calc(var(--spacing) * 2);
}
.w-2\.5 {
  width: calc(var(--spacing) * 2.5);
}
.w-3\/4 {
  width: calc(3/4 * 100%);
}
.w-4 {
  width: calc(var(--spacing) * 4);
}
.w-5 {
  width: calc(var(--spacing) * 5);
}
.w-8 {
  width: calc(var(--spacing) * 8);
}
.w-16 {
  width: calc(var(--spacing) * 16);
}
.w-20 {
  width: calc(var(--spacing) * 20);
}
.w-24 {
  width: calc(var(--spacing) * 24);
}
.w-32 {
  width: calc(var(--spacing) * 32);
}
.w-38 {
  width: calc(var(--spacing) * 38);
}
.w-40 {
  width: calc(var(--spacing) * 40);
}
.w-56 {
  width: calc(var(--spacing) * 56);
}
.w-\[1\.2rem\] {
  width: 1.2rem;
}
.w-\[100px\] {
  width: 100px;
}
.w-auto {
  width: auto;
}
.w-fit {
  width: -moz-fit-content;
  width: fit-content;
}
.w-full {
  width: 100%;
}
.max-w-\(--skeleton-width\) {
  max-width: var(--skeleton-width);
}
.max-w-md {
  max-width: var(--container-md);
}
.max-w-sm {
  max-width: var(--container-sm);
}
.min-w-0 {
  min-width: calc(var(--spacing) * 0);
}
.min-w-5 {
  min-width: calc(var(--spacing) * 5);
}
.min-w-8 {
  min-width: calc(var(--spacing) * 8);
}
.min-w-9 {
  min-width: calc(var(--spacing) * 9);
}
.min-w-10 {
  min-width: calc(var(--spacing) * 10);
}
.min-w-56 {
  min-width: calc(var(--spacing) * 56);
}
.min-w-\[8rem\] {
  min-width: 8rem;
}
.min-w-\[var\(--radix-select-trigger-width\)\] {
  min-width: var(--radix-select-trigger-width);
}
.flex-1 {
  flex: 1;
}
.shrink-0 {
  flex-shrink: 0;
}
.caption-bottom {
  caption-side: bottom;
}
.origin-\(--radix-dropdown-menu-content-transform-origin\) {
  transform-origin: var(--radix-dropdown-menu-content-transform-origin);
}
.origin-\(--radix-select-content-transform-origin\) {
  transform-origin: var(--radix-select-content-transform-origin);
}
.origin-\(--radix-tooltip-content-transform-origin\) {
  transform-origin: var(--radix-tooltip-content-transform-origin);
}
.-translate-x-1\/2 {
  --tw-translate-x: calc(calc(1/2 * 100%) * -1);
  translate: var(--tw-translate-x) var(--tw-translate-y);
}
.-translate-x-px {
  --tw-translate-x: -1px;
  translate: var(--tw-translate-x) var(--tw-translate-y);
}
.translate-x-px {
  --tw-translate-x: 1px;
  translate: var(--tw-translate-x) var(--tw-translate-y);
}
.translate-y-\[calc\(-50\%_-_2px\)\] {
  --tw-translate-y: calc(-50% - 2px);
  translate: var(--tw-translate-x) var(--tw-translate-y);
}
.scale-0 {
  --tw-scale-x: 0%;
  --tw-scale-y: 0%;
  --tw-scale-z: 0%;
  scale: var(--tw-scale-x) var(--tw-scale-y);
}
.scale-100 {
  --tw-scale-x: 100%;
  --tw-scale-y: 100%;
  --tw-scale-z: 100%;
  scale: var(--tw-scale-x) var(--tw-scale-y);
}
.rotate-0 {
  rotate: 0deg;
}
.rotate-45 {
  rotate: 45deg;
}
.rotate-90 {
  rotate: 90deg;
}
.transform {
  transform: var(--tw-rotate-x,) var(--tw-rotate-y,) var(--tw-rotate-z,) var(--tw-skew-x,) var(--tw-skew-y,);
}
.animate-in {
  animation: enter var(--tw-animation-duration,var(--tw-duration,.15s))var(--tw-ease,ease)var(--tw-animation-delay,0s)var(--tw-animation-iteration-count,1)var(--tw-animation-direction,normal)var(--tw-animation-fill-mode,none);
}
.animate-pulse {
  animation: var(--animate-pulse);
}
.animate-spin {
  animation: var(--animate-spin);
}
.cursor-default {
  cursor: default;
}
.cursor-pointer {
  cursor: pointer;
}
.scroll-my-1 {
  scroll-margin-block: calc(var(--spacing) * 1);
}
.list-disc {
  list-style-type: disc;
}
.auto-rows-min {
  grid-auto-rows: min-content;
}
.grid-cols-1 {
  grid-template-columns: repeat(1, minmax(0, 1fr));
}
.grid-cols-2 {
  grid-template-columns: repeat(2, minmax(0, 1fr));
}
.grid-rows-\[20px_1fr_20px\] {
  grid-template-rows: 20px 1fr 20px;
}
.grid-rows-\[auto_auto\] {
  grid-template-rows: auto auto;
}
.flex-col {
  flex-direction: column;
}
.flex-row {
  flex-direction: row;
}
.flex-wrap {
  flex-wrap: wrap;
}
.place-content-center {
  place-content: center;
}
.items-center {
  align-items: center;
}
.items-end {
  align-items: flex-end;
}
.items-start {
  align-items: flex-start;
}
.items-stretch {
  align-items: stretch;
}
.justify-between {
  justify-content: space-between;
}
.justify-center {
  justify-content: center;
}
.justify-start {
  justify-content: flex-start;
}
.justify-items-center {
  justify-items: center;
}
.gap-0\.5 {
  gap: calc(var(--spacing) * 0.5);
}
.gap-1 {
  gap: calc(var(--spacing) * 1);
}
.gap-1\.5 {
  gap: calc(var(--spacing) * 1.5);
}
.gap-2 {
  gap: calc(var(--spacing) * 2);
}
.gap-3 {
  gap: calc(var(--spacing) * 3);
}
.gap-4 {
  gap: calc(var(--spacing) * 4);
}
.gap-6 {
  gap: calc(var(--spacing) * 6);
}
.gap-7 {
  gap: calc(var(--spacing) * 7);
}
.gap-8 {
  gap: calc(var(--spacing) * 8);
}
.gap-16 {
  gap: calc(var(--spacing) * 16);
}
.gap-\[32px\] {
  gap: 32px;
}
.space-y-1 {
  :where(& > :not(:last-child)) {
    --tw-space-y-reverse: 0;
    margin-block-start: calc(calc(var(--spacing) * 1) * var(--tw-space-y-reverse));
    margin-block-end: calc(calc(var(--spacing) * 1) * calc(1 - var(--tw-space-y-reverse)));
  }
}
.space-y-4 {
  :where(& > :not(:last-child)) {
    --tw-space-y-reverse: 0;
    margin-block-start: calc(calc(var(--spacing) * 4) * var(--tw-space-y-reverse));
    margin-block-end: calc(calc(var(--spacing) * 4) * calc(1 - var(--tw-space-y-reverse)));
  }
}
.self-start {
  align-self: flex-start;
}
.justify-self-end {
  justify-self: flex-end;
}
.truncate {
  overflow: hidden;
  text-overflow: ellipsis;
  white-space: nowrap;
}
.overflow-auto {
  overflow: auto;
}
.overflow-hidden {
  overflow: hidden;
}
.overflow-x-auto {
  overflow-x: auto;
}
.overflow-x-hidden {
  overflow-x: hidden;
}
.overflow-y-auto {
  overflow-y: auto;
}
.rounded {
  border-radius: 0.25rem;
}
.rounded-\[2px\] {
  border-radius: 2px;
}
.rounded-\[4px\] {
  border-radius: 4px;
}
.rounded-full {
  border-radius: calc(infinity * 1px);
}
.rounded-lg {
  border-radius: var(--radius);
}
.rounded-md {
  border-radius: calc(var(--radius) - 2px);
}
.rounded-none {
  border-radius: 0;
}
.rounded-sm {
  border-radius: calc(var(--radius) - 4px);
}
.rounded-xl {
  border-radius: calc(var(--radius) + 4px);
}
.rounded-xs {
  border-radius: var(--radius-xs);
}
.border {
  border-style: var(--tw-border-style);
  border-width: 1px;
}
.border-\[1\.5px\] {
  border-style: var(--tw-border-style);
  border-width: 1.5px;
}
.border-t {
  border-top-style: var(--tw-border-style);
  border-top-width: 1px;
}
.border-r {
  border-right-style: var(--tw-border-style);
  border-right-width: 1px;
}
.border-b {
  border-bottom-style: var(--tw-border-style);
  border-bottom-width: 1px;
}
.border-l {
  border-left-style: var(--tw-border-style);
  border-left-width: 1px;
}
.border-dashed {
  --tw-border-style: dashed;
  border-style: dashed;
}
.border-\(--color-border\) {
  border-color: var(--color-border);
}
.border-border\/50 {
  border-color: var(--border);
  @supports (color: color-mix(in lab, red, red)) {
    border-color: color-mix(in oklab, var(--border) 50%, transparent);
  }
}
.border-destructive {
  border-color: var(--destructive);
}
.border-gray-300 {
  border-color: var(--color-gray-300);
}
.border-input {
  border-color: var(--input);
}
.border-sidebar-border {
  border-color: var(--sidebar-border);
}
.border-transparent {
  border-color: transparent;
}
.bg-\(--color-bg\) {
  background-color: var(--color-bg);
}
.bg-accent {
  background-color: var(--accent);
}
.bg-background {
  background-color: var(--background);
}
.bg-black\/50 {
  background-color: color-mix(in srgb, #000 50%, transparent);
  @supports (color: color-mix(in lab, red, red)) {
    background-color: color-mix(in oklab, var(--color-black) 50%, transparent);
  }
}
.bg-blue-500 {
  background-color: var(--color-blue-500);
}
.bg-border {
  background-color: var(--border);
}
.bg-card {
  background-color: var(--card);
}
.bg-destructive {
  background-color: var(--destructive);
}
.bg-foreground {
  background-color: var(--foreground);
}
.bg-muted {
  background-color: var(--muted);
}
.bg-muted\/50 {
  background-color: var(--muted);
  @supports (color: color-mix(in lab, red, red)) {
    background-color: color-mix(in oklab, var(--muted) 50%, transparent);
  }
}
.bg-popover {
  background-color: var(--popover);
}
.bg-primary {
  background-color: var(--primary);
}
.bg-red-500 {
  background-color: var(--color-red-500);
}
.bg-secondary {
  background-color: var(--secondary);
}
.bg-sidebar {
  background-color: var(--sidebar);
}
.bg-sidebar-border {
  background-color: var(--sidebar-border);
}
.bg-transparent {
  background-color: transparent;
}
.fill-current {
  fill: currentcolor;
}
.fill-foreground {
  fill: var(--foreground);
}
.fill-green-500 {
  fill: var(--color-green-500);
}
.p-0 {
  padding: calc(var(--spacing) * 0);
}
.p-1 {
  padding: calc(var(--spacing) * 1);
}
.p-2 {
  padding: calc(var(--spacing) * 2);
}
.p-3 {
  padding: calc(var(--spacing) * 3);
}
.p-4 {
  padding: calc(var(--spacing) * 4);
}
.p-6 {
  padding: calc(var(--spacing) * 6);
}
.p-8 {
  padding: calc(var(--spacing) * 8);
}
.p-\[3px\] {
  padding: 3px;
}
.px-0 {
  padding-inline: calc(var(--spacing) * 0);
}
.px-1 {
  padding-inline: calc(var(--spacing) * 1);
}
.px-1\.5 {
  padding-inline: calc(var(--spacing) * 1.5);
}
.px-2 {
  padding-inline: calc(var(--spacing) * 2);
}
.px-2\.5 {
  padding-inline: calc(var(--spacing) * 2.5);
}
.px-3 {
  padding-inline: calc(var(--spacing) * 3);
}
.px-4 {
  padding-inline: calc(var(--spacing) * 4);
}
.px-6 {
  padding-inline: calc(var(--spacing) * 6);
}
.py-0\.5 {
  padding-block: calc(var(--spacing) * 0.5);
}
.py-1 {
  padding-block: calc(var(--spacing) * 1);
}
.py-1\.5 {
  padding-block: calc(var(--spacing) * 1.5);
}
.py-2 {
  padding-block: calc(var(--spacing) * 2);
}
.py-4 {
  padding-block: calc(var(--spacing) * 4);
}
.py-5 {
  padding-block: calc(var(--spacing) * 5);
}
.py-6 {
  padding-block: calc(var(--spacing) * 6);
}
.pt-3 {
  padding-top: calc(var(--spacing) * 3);
}
.pt-4 {
  padding-top: calc(var(--spacing) * 4);
}
.pr-2 {
  padding-right: calc(var(--spacing) * 2);
}
.pr-8 {
  padding-right: calc(var(--spacing) * 8);
}
.pb-3 {
  padding-bottom: calc(var(--spacing) * 3);
}
.pb-4 {
  padding-bottom: calc(var(--spacing) * 4);
}
.pb-20 {
  padding-bottom: calc(var(--spacing) * 20);
}
.pl-2 {
  padding-left: calc(var(--spacing) * 2);
}
.pl-8 {
  padding-left: calc(var(--spacing) * 8);
}
.text-center {
  text-align: center;
}
.text-left {
  text-align: left;
}
.text-right {
  text-align: right;
}
.align-middle {
  vertical-align: middle;
}
.font-mono {
  font-family: var(--font-geist-mono);
}
.font-sans {
  font-family: var(--font-geist-sans);
}
.text-2xl {
  font-size: var(--text-2xl);
  line-height: var(--tw-leading, var(--text-2xl--line-height));
}
.text-base {
  font-size: var(--text-base);
  line-height: var(--tw-leading, var(--text-base--line-height));
}
.text-sm {
  font-size: var(--text-sm);
  line-height: var(--tw-leading, var(--text-sm--line-height));
}
.text-xs {
  font-size: var(--text-xs);
  line-height: var(--tw-leading, var(--text-xs--line-height));
}
.leading-none {
  --tw-leading: 1;
  line-height: 1;
}
.leading-normal {
  --tw-leading: var(--leading-normal);
  line-height: var(--leading-normal);
}
.leading-snug {
  --tw-leading: var(--leading-snug);
  line-height: var(--leading-snug);
}
.leading-tight {
  --tw-leading: var(--leading-tight);
  line-height: var(--leading-tight);
}
.font-medium {
  --tw-font-weight: var(--font-weight-medium);
  font-weight: var(--font-weight-medium);
}
.font-normal {
  --tw-font-weight: var(--font-weight-normal);
  font-weight: var(--font-weight-normal);
}
.font-semibold {
  --tw-font-weight: var(--font-weight-semibold);
  font-weight: var(--font-weight-semibold);
}
.tracking-widest {
  --tw-tracking: var(--tracking-widest);
  letter-spacing: var(--tracking-widest);
}
.text-balance {
  text-wrap: balance;
}
.break-words {
  overflow-wrap: break-word;
}
.whitespace-nowrap {
  white-space: nowrap;
}
.text-background {
  color: var(--background);
}
.text-card-foreground {
  color: var(--card-foreground);
}
.text-current {
  color: currentcolor;
}
.text-destructive {
  color: var(--destructive);
}
.text-foreground {
  color: var(--foreground);
}
.text-muted-foreground {
  color: var(--muted-foreground);
}
.text-popover-foreground {
  color: var(--popover-foreground);
}
.text-primary {
  color: var(--primary);
}
.text-primary-foreground {
  color: var(--primary-foreground);
}
.text-secondary-foreground {
  color: var(--secondary-foreground);
}
.text-sidebar-foreground {
  color: var(--sidebar-foreground);
}
.text-sidebar-foreground\/70 {
  color: var(--sidebar-foreground);
  @supports (color: color-mix(in lab, red, red)) {
    color: color-mix(in oklab, var(--sidebar-foreground) 70%, transparent);
  }
}
.text-white {
  color: var(--color-white);
}
.capitalize {
  text-transform: capitalize;
}
.tabular-nums {
  --tw-numeric-spacing: tabular-nums;
  font-variant-numeric: var(--tw-ordinal,) var(--tw-slashed-zero,) var(--tw-numeric-figure,) var(--tw-numeric-spacing,) var(--tw-numeric-fraction,);
}
.underline-offset-4 {
  text-underline-offset: 4px;
}
.antialiased {
  -webkit-font-smoothing: antialiased;
  -moz-osx-font-smoothing: grayscale;
}
.opacity-50 {
  opacity: 50%;
}
.opacity-70 {
  opacity: 70%;
}
.shadow-\[0_0_0_1px_hsl\(var\(--sidebar-border\)\)\] {
  --tw-shadow: 0 0 0 1px var(--tw-shadow-color, hsl(var(--sidebar-border)));
  box-shadow: var(--tw-inset-shadow), var(--tw-inset-ring-shadow), var(--tw-ring-offset-shadow), var(--tw-ring-shadow), var(--tw-shadow);
}
.shadow-lg {
  --tw-shadow: 0 10px 15px -3px var(--tw-shadow-color, rgb(0 0 0 / 0.1)), 0 4px 6px -4px var(--tw-shadow-color, rgb(0 0 0 / 0.1));
  box-shadow: var(--tw-inset-shadow), var(--tw-inset-ring-shadow), var(--tw-ring-offset-shadow), var(--tw-ring-shadow), var(--tw-shadow);
}
.shadow-md {
  --tw-shadow: 0 4px 6px -1px var(--tw-shadow-color, rgb(0 0 0 / 0.1)), 0 2px 4px -2px var(--tw-shadow-color, rgb(0 0 0 / 0.1));
  box-shadow: var(--tw-inset-shadow), var(--tw-inset-ring-shadow), var(--tw-ring-offset-shadow), var(--tw-ring-shadow), var(--tw-shadow);
}
.shadow-none {
  --tw-shadow: 0 0 #0000;
  box-shadow: var(--tw-inset-shadow), var(--tw-inset-ring-shadow), var(--tw-ring-offset-shadow), var(--tw-ring-shadow), var(--tw-shadow);
}
.shadow-sm {
  --tw-shadow: 0 1px 3px 0 var(--tw-shadow-color, rgb(0 0 0 / 0.1)), 0 1px 2px -1px var(--tw-shadow-color, rgb(0 0 0 / 0.1));
  box-shadow: var(--tw-inset-shadow), var(--tw-inset-ring-shadow), var(--tw-ring-offset-shadow), var(--tw-ring-shadow), var(--tw-shadow);
}
.shadow-xl {
  --tw-shadow: 0 20px 25px -5px var(--tw-shadow-color, rgb(0 0 0 / 0.1)), 0 8px 10px -6px var(--tw-shadow-color, rgb(0 0 0 / 0.1));
  box-shadow: var(--tw-inset-shadow), var(--tw-inset-ring-shadow), var(--tw-ring-offset-shadow), var(--tw-ring-shadow), var(--tw-shadow);
}
.shadow-xs {
  --tw-shadow: 0 1px 2px 0 var(--tw-shadow-color, rgb(0 0 0 / 0.05));
  box-shadow: var(--tw-inset-shadow), var(--tw-inset-ring-shadow), var(--tw-ring-offset-shadow), var(--tw-ring-shadow), var(--tw-shadow);
}
.ring-sidebar-ring {
  --tw-ring-color: var(--sidebar-ring);
}
.ring-offset-background {
  --tw-ring-offset-color: var(--background);
}
.outline-hidden {
  --tw-outline-style: none;
  outline-style: none;
  @media (forced-colors: active) {
    outline: 2px solid transparent;
    outline-offset: 2px;
  }
}
.outline {
  outline-style: var(--tw-outline-style);
  outline-width: 1px;
}
.grayscale {
  --tw-grayscale: grayscale(100%);
  filter: var(--tw-blur,) var(--tw-brightness,) var(--tw-contrast,) var(--tw-grayscale,) var(--tw-hue-rotate,) var(--tw-invert,) var(--tw-saturate,) var(--tw-sepia,) var(--tw-drop-shadow,);
}
.transition {
  transition-property: color, background-color, border-color, outline-color, text-decoration-color, fill, stroke, --tw-gradient-from, --tw-gradient-via, --tw-gradient-to, opacity, box-shadow, transform, translate, scale, rotate, filter, backdrop-filter, display, content-visibility, overlay, pointer-events;
  transition-timing-function: var(--tw-ease, var(--default-transition-timing-function));
  transition-duration: var(--tw-duration, var(--default-transition-duration));
}
.transition-\[color\,box-shadow\] {
  transition-property: color,box-shadow;
  transition-timing-function: var(--tw-ease, var(--default-transition-timing-function));
  transition-duration: var(--tw-duration, var(--default-transition-duration));
}
.transition-\[left\,right\,width\] {
  transition-property: left,right,width;
  transition-timing-function: var(--tw-ease, var(--default-transition-timing-function));
  transition-duration: var(--tw-duration, var(--default-transition-duration));
}
.transition-\[margin\,opacity\] {
  transition-property: margin,opacity;
  transition-timing-function: var(--tw-ease, var(--default-transition-timing-function));
  transition-duration: var(--tw-duration, var(--default-transition-duration));
}
.transition-\[width\,height\,padding\] {
  transition-property: width,height,padding;
  transition-timing-function: var(--tw-ease, var(--default-transition-timing-function));
  transition-duration: var(--tw-duration, var(--default-transition-duration));
}
.transition-\[width\,height\] {
  transition-property: width,height;
  transition-timing-function: var(--tw-ease, var(--default-transition-timing-function));
  transition-duration: var(--tw-duration, var(--default-transition-duration));
}
.transition-\[width\] {
  transition-property: width;
  transition-timing-function: var(--tw-ease, var(--default-transition-timing-function));
  transition-duration: var(--tw-duration, var(--default-transition-duration));
}
.transition-all {
  transition-property: all;
  transition-timing-function: var(--tw-ease, var(--default-transition-timing-function));
  transition-duration: var(--tw-duration, var(--default-transition-duration));
}
.transition-colors {
  transition-property: color, background-color, border-color, outline-color, text-decoration-color, fill, stroke, --tw-gradient-from, --tw-gradient-via, --tw-gradient-to;
  transition-timing-function: var(--tw-ease, var(--default-transition-timing-function));
  transition-duration: var(--tw-duration, var(--default-transition-duration));
}
.transition-opacity {
  transition-property: opacity;
  transition-timing-function: var(--tw-ease, var(--default-transition-timing-function));
  transition-duration: var(--tw-duration, var(--default-transition-duration));
}
.transition-shadow {
  transition-property: box-shadow;
  transition-timing-function: var(--tw-ease, var(--default-transition-timing-function));
  transition-duration: var(--tw-duration, var(--default-transition-duration));
}
.transition-transform {
  transition-property: transform, translate, scale, rotate;
  transition-timing-function: var(--tw-ease, var(--default-transition-timing-function));
  transition-duration: var(--tw-duration, var(--default-transition-duration));
}
.transition-none {
  transition-property: none;
}
.duration-200 {
  --tw-duration: 200ms;
  transition-duration: 200ms;
}
.ease-in-out {
  --tw-ease: var(--ease-in-out);
  transition-timing-function: var(--ease-in-out);
}
.ease-linear {
  --tw-ease: linear;
  transition-timing-function: linear;
}
.fade-in-0 {
  --tw-enter-opacity: calc(0/100);
  --tw-enter-opacity: 0;
}
.outline-none {
  --tw-outline-style: none;
  outline-style: none;
}
.select-none {
  -webkit-user-select: none;
  -moz-user-select: none;
       user-select: none;
}
.zoom-in-95 {
  --tw-enter-scale: calc(95*1%);
  --tw-enter-scale: .95;
}
.group-focus-within\/menu-item\:opacity-100 {
  &:is(:where(.group\/menu-item):focus-within *) {
    opacity: 100%;
  }
}
.group-hover\/menu-item\:opacity-100 {
  &:is(:where(.group\/menu-item):hover *) {
    @media (hover: hover) {
      opacity: 100%;
    }
  }
}
.group-has-data-\[collapsible\=icon\]\/sidebar-wrapper\:h-\(--header-height\) {
  &:is(:where(.group\/sidebar-wrapper):has(*[data-collapsible="icon"]) *) {
    height: var(--header-height);
  }
}
.group-has-data-\[sidebar\=menu-action\]\/menu-item\:pr-8 {
  &:is(:where(.group\/menu-item):has(*[data-sidebar="menu-action"]) *) {
    padding-right: calc(var(--spacing) * 8);
  }
}
.group-has-\[\[data-orientation\=horizontal\]\]\/field\:text-balance {
  &:is(:where(.group\/field):has(*:is([data-orientation=horizontal])) *) {
    text-wrap: balance;
  }
}
.group-data-\[collapsible\=icon\]\:-mt-8 {
  &:is(:where(.group)[data-collapsible="icon"] *) {
    margin-top: calc(var(--spacing) * -8);
  }
}
.group-data-\[collapsible\=icon\]\:hidden {
  &:is(:where(.group)[data-collapsible="icon"] *) {
    display: none;
  }
}
.group-data-\[collapsible\=icon\]\:size-8\! {
  &:is(:where(.group)[data-collapsible="icon"] *) {
    width: calc(var(--spacing) * 8) !important;
    height: calc(var(--spacing) * 8) !important;
  }
}
.group-data-\[collapsible\=icon\]\:w-\(--sidebar-width-icon\) {
  &:is(:where(.group)[data-collapsible="icon"] *) {
    width: var(--sidebar-width-icon);
  }
}
.group-data-\[collapsible\=icon\]\:w-\[calc\(var\(--sidebar-width-icon\)\+\(--spacing\(4\)\)\)\] {
  &:is(:where(.group)[data-collapsible="icon"] *) {
    width: calc(var(--sidebar-width-icon) + (calc(var(--spacing) * 4)));
  }
}
.group-data-\[collapsible\=icon\]\:w-\[calc\(var\(--sidebar-width-icon\)\+\(--spacing\(4\)\)\+2px\)\] {
  &:is(:where(.group)[data-collapsible="icon"] *) {
    width: calc(var(--sidebar-width-icon) + (calc(var(--spacing) * 4)) + 2px);
  }
}
.group-data-\[collapsible\=icon\]\:overflow-hidden {
  &:is(:where(.group)[data-collapsible="icon"] *) {
    overflow: hidden;
  }
}
.group-data-\[collapsible\=icon\]\:p-0\! {
  &:is(:where(.group)[data-collapsible="icon"] *) {
    padding: calc(var(--spacing) * 0) !important;
  }
}
.group-data-\[collapsible\=icon\]\:p-2\! {
  &:is(:where(.group)[data-collapsible="icon"] *) {
    padding: calc(var(--spacing) * 2) !important;
  }
}
.group-data-\[collapsible\=icon\]\:opacity-0 {
  &:is(:where(.group)[data-collapsible="icon"] *) {
    opacity: 0%;
  }
}
.group-data-\[collapsible\=offcanvas\]\:right-\[calc\(var\(--sidebar-width\)\*-1\)\] {
  &:is(:where(.group)[data-collapsible="offcanvas"] *) {
    right: calc(var(--sidebar-width) * -1);
  }
}
.group-data-\[collapsible\=offcanvas\]\:left-\[calc\(var\(--sidebar-width\)\*-1\)\] {
  &:is(:where(.group)[data-collapsible="offcanvas"] *) {
    left: calc(var(--sidebar-width) * -1);
  }
}
.group-data-\[collapsible\=offcanvas\]\:w-0 {
  &:is(:where(.group)[data-collapsible="offcanvas"] *) {
    width: calc(var(--spacing) * 0);
  }
}
.group-data-\[collapsible\=offcanvas\]\:translate-x-0 {
  &:is(:where(.group)[data-collapsible="offcanvas"] *) {
    --tw-translate-x: calc(var(--spacing) * 0);
    translate: var(--tw-translate-x) var(--tw-translate-y);
  }
}
.group-data-\[disabled\=true\]\:pointer-events-none {
  &:is(:where(.group)[data-disabled="true"] *) {
    pointer-events: none;
  }
}
.group-data-\[disabled\=true\]\:opacity-50 {
  &:is(:where(.group)[data-disabled="true"] *) {
    opacity: 50%;
  }
}
.group-data-\[disabled\=true\]\/field\:opacity-50 {
  &:is(:where(.group\/field)[data-disabled="true"] *) {
    opacity: 50%;
  }
}
.group-data-\[side\=left\]\:-right-4 {
  &:is(:where(.group)[data-side="left"] *) {
    right: calc(var(--spacing) * -4);
  }
}
.group-data-\[side\=left\]\:border-r {
  &:is(:where(.group)[data-side="left"] *) {
    border-right-style: var(--tw-border-style);
    border-right-width: 1px;
  }
}
.group-data-\[side\=right\]\:left-0 {
  &:is(:where(.group)[data-side="right"] *) {
    left: calc(var(--spacing) * 0);
  }
}
.group-data-\[side\=right\]\:rotate-180 {
  &:is(:where(.group)[data-side="right"] *) {
    rotate: 180deg;
  }
}
.group-data-\[side\=right\]\:border-l {
  &:is(:where(.group)[data-side="right"] *) {
    border-left-style: var(--tw-border-style);
    border-left-width: 1px;
  }
}
.group-data-\[variant\=floating\]\:rounded-lg {
  &:is(:where(.group)[data-variant="floating"] *) {
    border-radius: var(--radius);
  }
}
.group-data-\[variant\=floating\]\:border {
  &:is(:where(.group)[data-variant="floating"] *) {
    border-style: var(--tw-border-style);
    border-width: 1px;
  }
}
.group-data-\[variant\=floating\]\:border-sidebar-border {
  &:is(:where(.group)[data-variant="floating"] *) {
    border-color: var(--sidebar-border);
  }
}
.group-data-\[variant\=floating\]\:shadow-sm {
  &:is(:where(.group)[data-variant="floating"] *) {
    --tw-shadow: 0 1px 3px 0 var(--tw-shadow-color, rgb(0 0 0 / 0.1)), 0 1px 2px -1px var(--tw-shadow-color, rgb(0 0 0 / 0.1));
    box-shadow: var(--tw-inset-shadow), var(--tw-inset-ring-shadow), var(--tw-ring-offset-shadow), var(--tw-ring-shadow), var(--tw-shadow);
  }
}
.group-data-\[variant\=outline\]\/field-group\:-mb-2 {
  &:is(:where(.group\/field-group)[data-variant="outline"] *) {
    margin-bottom: calc(var(--spacing) * -2);
  }
}
.group-data-\[vaul-drawer-direction\=bottom\]\/drawer-content\:block {
  &:is(:where(.group\/drawer-content)[data-vaul-drawer-direction="bottom"] *) {
    display: block;
  }
}
.group-data-\[vaul-drawer-direction\=bottom\]\/drawer-content\:text-center {
  &:is(:where(.group\/drawer-content)[data-vaul-drawer-direction="bottom"] *) {
    text-align: center;
  }
}
.group-data-\[vaul-drawer-direction\=top\]\/drawer-content\:text-center {
  &:is(:where(.group\/drawer-content)[data-vaul-drawer-direction="top"] *) {
    text-align: center;
  }
}
.peer-hover\/menu-button\:text-sidebar-accent-foreground {
  &:is(:where(.peer\/menu-button):hover ~ *) {
    @media (hover: hover) {
      color: var(--sidebar-accent-foreground);
    }
  }
}
.peer-disabled\:cursor-not-allowed {
  &:is(:where(.peer):disabled ~ *) {
    cursor: not-allowed;
  }
}
.peer-disabled\:opacity-50 {
  &:is(:where(.peer):disabled ~ *) {
    opacity: 50%;
  }
}
.peer-data-\[active\=true\]\/menu-button\:text-sidebar-accent-foreground {
  &:is(:where(.peer\/menu-button)[data-active="true"] ~ *) {
    color: var(--sidebar-accent-foreground);
  }
}
.peer-data-\[size\=default\]\/menu-button\:top-1\.5 {
  &:is(:where(.peer\/menu-button)[data-size="default"] ~ *) {
    top: calc(var(--spacing) * 1.5);
  }
}
.peer-data-\[size\=lg\]\/menu-button\:top-2\.5 {
  &:is(:where(.peer\/menu-button)[data-size="lg"] ~ *) {
    top: calc(var(--spacing) * 2.5);
  }
}
.peer-data-\[size\=sm\]\/menu-button\:top-1 {
  &:is(:where(.peer\/menu-button)[data-size="sm"] ~ *) {
    top: calc(var(--spacing) * 1);
  }
}
.selection\:bg-primary {
  & *::-moz-selection {
    background-color: var(--primary);
  }
  & *::selection {
    background-color: var(--primary);
  }
  &::-moz-selection {
    background-color: var(--primary);
  }
  &::selection {
    background-color: var(--primary);
  }
}
.selection\:text-primary-foreground {
  & *::-moz-selection {
    color: var(--primary-foreground);
  }
  & *::selection {
    color: var(--primary-foreground);
  }
  &::-moz-selection {
    color: var(--primary-foreground);
  }
  &::selection {
    color: var(--primary-foreground);
  }
}
.file\:inline-flex {
  &::file-selector-button {
    display: inline-flex;
  }
}
.file\:h-7 {
  &::file-selector-button {
    height: calc(var(--spacing) * 7);
  }
}
.file\:border-0 {
  &::file-selector-button {
    border-style: var(--tw-border-style);
    border-width: 0px;
  }
}
.file\:bg-transparent {
  &::file-selector-button {
    background-color: transparent;
  }
}
.file\:text-sm {
  &::file-selector-button {
    font-size: var(--text-sm);
    line-height: var(--tw-leading, var(--text-sm--line-height));
  }
}
.file\:font-medium {
  &::file-selector-button {
    --tw-font-weight: var(--font-weight-medium);
    font-weight: var(--font-weight-medium);
  }
}
.file\:text-foreground {
  &::file-selector-button {
    color: var(--foreground);
  }
}
.placeholder\:text-muted-foreground {
  &::-moz-placeholder {
    color: var(--muted-foreground);
  }
  &::placeholder {
    color: var(--muted-foreground);
  }
}
.after\:absolute {
  &::after {
    content: var(--tw-content);
    position: absolute;
  }
}
.after\:-inset-2 {
  &::after {
    content: var(--tw-content);
    inset: calc(var(--spacing) * -2);
  }
}
.after\:inset-y-0 {
  &::after {
    content: var(--tw-content);
    inset-block: calc(var(--spacing) * 0);
  }
}
.after\:left-1\/2 {
  &::after {
    content: var(--tw-content);
    left: calc(1/2 * 100%);
  }
}
.after\:w-\[2px\] {
  &::after {
    content: var(--tw-content);
    width: 2px;
  }
}
.group-data-\[collapsible\=offcanvas\]\:after\:left-full {
  &:is(:where(.group)[data-collapsible="offcanvas"] *) {
    &::after {
      content: var(--tw-content);
      left: 100%;
    }
  }
}
.first\:rounded-l-md {
  &:first-child {
    border-top-left-radius: calc(var(--radius) - 2px);
    border-bottom-left-radius: calc(var(--radius) - 2px);
  }
}
.last\:mt-0 {
  &:last-child {
    margin-top: calc(var(--spacing) * 0);
  }
}
.last\:rounded-r-md {
  &:last-child {
    border-top-right-radius: calc(var(--radius) - 2px);
    border-bottom-right-radius: calc(var(--radius) - 2px);
  }
}
.hover\:bg-accent {
  &:hover {
    @media (hover: hover) {
      background-color: var(--accent);
    }
  }
}
.hover\:bg-destructive\/90 {
  &:hover {
    @media (hover: hover) {
      background-color: var(--destructive);
      @supports (color: color-mix(in lab, red, red)) {
        background-color: color-mix(in oklab, var(--destructive) 90%, transparent);
      }
    }
  }
}
.hover\:bg-input\/30 {
  &:hover {
    @media (hover: hover) {
      background-color: var(--input);
      @supports (color: color-mix(in lab, red, red)) {
        background-color: color-mix(in oklab, var(--input) 30%, transparent);
      }
    }
  }
}
.hover\:bg-muted {
  &:hover {
    @media (hover: hover) {
      background-color: var(--muted);
    }
  }
}
.hover\:bg-muted\/50 {
  &:hover {
    @media (hover: hover) {
      background-color: var(--muted);
      @supports (color: color-mix(in lab, red, red)) {
        background-color: color-mix(in oklab, var(--muted) 50%, transparent);
      }
    }
  }
}
.hover\:bg-primary\/90 {
  &:hover {
    @media (hover: hover) {
      background-color: var(--primary);
      @supports (color: color-mix(in lab, red, red)) {
        background-color: color-mix(in oklab, var(--primary) 90%, transparent);
      }
    }
  }
}
.hover\:bg-secondary\/80 {
  &:hover {
    @media (hover: hover) {
      background-color: var(--secondary);
      @supports (color: color-mix(in lab, red, red)) {
        background-color: color-mix(in oklab, var(--secondary) 80%, transparent);
      }
    }
  }
}
.hover\:bg-sidebar-accent {
  &:hover {
    @media (hover: hover) {
      background-color: var(--sidebar-accent);
    }
  }
}
.hover\:bg-transparent {
  &:hover {
    @media (hover: hover) {
      background-color: transparent;
    }
  }
}
.hover\:text-accent-foreground {
  &:hover {
    @media (hover: hover) {
      color: var(--accent-foreground);
    }
  }
}
.hover\:text-foreground {
  &:hover {
    @media (hover: hover) {
      color: var(--foreground);
    }
  }
}
.hover\:text-muted-foreground {
  &:hover {
    @media (hover: hover) {
      color: var(--muted-foreground);
    }
  }
}
.hover\:text-primary-foreground {
  &:hover {
    @media (hover: hover) {
      color: var(--primary-foreground);
    }
  }
}
.hover\:text-sidebar-accent-foreground {
  &:hover {
    @media (hover: hover) {
      color: var(--sidebar-accent-foreground);
    }
  }
}
.hover\:underline {
  &:hover {
    @media (hover: hover) {
      text-decoration-line: underline;
    }
  }
}
.hover\:opacity-100 {
  &:hover {
    @media (hover: hover) {
      opacity: 100%;
    }
  }
}
.hover\:shadow-\[0_0_0_1px_hsl\(var\(--sidebar-accent\)\)\] {
  &:hover {
    @media (hover: hover) {
      --tw-shadow: 0 0 0 1px var(--tw-shadow-color, hsl(var(--sidebar-accent)));
      box-shadow: var(--tw-inset-shadow), var(--tw-inset-ring-shadow), var(--tw-ring-offset-shadow), var(--tw-ring-shadow), var(--tw-shadow);
    }
  }
}
.hover\:group-data-\[collapsible\=offcanvas\]\:bg-sidebar {
  &:hover {
    @media (hover: hover) {
      &:is(:where(.group)[data-collapsible="offcanvas"] *) {
        background-color: var(--sidebar);
      }
    }
  }
}
.hover\:after\:bg-sidebar-border {
  &:hover {
    @media (hover: hover) {
      &::after {
        content: var(--tw-content);
        background-color: var(--sidebar-border);
      }
    }
  }
}
.focus\:z-10 {
  &:focus {
    z-index: 10;
  }
}
.focus\:bg-accent {
  &:focus {
    background-color: var(--accent);
  }
}
.focus\:text-accent-foreground {
  &:focus {
    color: var(--accent-foreground);
  }
}
.focus\:ring-2 {
  &:focus {
    --tw-ring-shadow: var(--tw-ring-inset,) 0 0 0 calc(2px + var(--tw-ring-offset-width)) var(--tw-ring-color, currentcolor);
    box-shadow: var(--tw-inset-shadow), var(--tw-inset-ring-shadow), var(--tw-ring-offset-shadow), var(--tw-ring-shadow), var(--tw-shadow);
  }
}
.focus\:ring-ring {
  &:focus {
    --tw-ring-color: var(--ring);
  }
}
.focus\:ring-offset-2 {
  &:focus {
    --tw-ring-offset-width: 2px;
    --tw-ring-offset-shadow: var(--tw-ring-inset,) 0 0 0 var(--tw-ring-offset-width) var(--tw-ring-offset-color);
  }
}
.focus\:outline-hidden {
  &:focus {
    --tw-outline-style: none;
    outline-style: none;
    @media (forced-colors: active) {
      outline: 2px solid transparent;
      outline-offset: 2px;
    }
  }
}
.focus-visible\:z-10 {
  &:focus-visible {
    z-index: 10;
  }
}
.focus-visible\:border {
  &:focus-visible {
    border-style: var(--tw-border-style);
    border-width: 1px;
  }
}
.focus-visible\:border-ring {
  &:focus-visible {
    border-color: var(--ring);
  }
}
.focus-visible\:bg-background {
  &:focus-visible {
    background-color: var(--background);
  }
}
.focus-visible\:ring-2 {
  &:focus-visible {
    --tw-ring-shadow: var(--tw-ring-inset,) 0 0 0 calc(2px + var(--tw-ring-offset-width)) var(--tw-ring-color, currentcolor);
    box-shadow: var(--tw-inset-shadow), var(--tw-inset-ring-shadow), var(--tw-ring-offset-shadow), var(--tw-ring-shadow), var(--tw-shadow);
  }
}
.focus-visible\:ring-\[3px\] {
  &:focus-visible {
    --tw-ring-shadow: var(--tw-ring-inset,) 0 0 0 calc(3px + var(--tw-ring-offset-width)) var(--tw-ring-color, currentcolor);
    box-shadow: var(--tw-inset-shadow), var(--tw-inset-ring-shadow), var(--tw-ring-offset-shadow), var(--tw-ring-shadow), var(--tw-shadow);
  }
}
.focus-visible\:ring-destructive\/20 {
  &:focus-visible {
    --tw-ring-color: var(--destructive);
    @supports (color: color-mix(in lab, red, red)) {
      --tw-ring-color: color-mix(in oklab, var(--destructive) 20%, transparent);
    }
  }
}
.focus-visible\:ring-ring\/50 {
  &:focus-visible {
    --tw-ring-color: var(--ring);
    @supports (color: color-mix(in lab, red, red)) {
      --tw-ring-color: color-mix(in oklab, var(--ring) 50%, transparent);
    }
  }
}
.focus-visible\:outline-1 {
  &:focus-visible {
    outline-style: var(--tw-outline-style);
    outline-width: 1px;
  }
}
.focus-visible\:outline-ring {
  &:focus-visible {
    outline-color: var(--ring);
  }
}
.active\:bg-primary\/90 {
  &:active {
    background-color: var(--primary);
    @supports (color: color-mix(in lab, red, red)) {
      background-color: color-mix(in oklab, var(--primary) 90%, transparent);
    }
  }
}
.active\:bg-sidebar-accent {
  &:active {
    background-color: var(--sidebar-accent);
  }
}
.active\:text-primary-foreground {
  &:active {
    color: var(--primary-foreground);
  }
}
.active\:text-sidebar-accent-foreground {
  &:active {
    color: var(--sidebar-accent-foreground);
  }
}
.disabled\:pointer-events-none {
  &:disabled {
    pointer-events: none;
  }
}
.disabled\:cursor-not-allowed {
  &:disabled {
    cursor: not-allowed;
  }
}
.disabled\:opacity-50 {
  &:disabled {
    opacity: 50%;
  }
}
.in-data-\[side\=left\]\:cursor-w-resize {
  :where(*[data-side="left"]) & {
    cursor: w-resize;
  }
}
.in-data-\[side\=right\]\:cursor-e-resize {
  :where(*[data-side="right"]) & {
    cursor: e-resize;
  }
}
.has-data-\[slot\=card-action\]\:grid-cols-\[1fr_auto\] {
  &:has(*[data-slot="card-action"]) {
    grid-template-columns: 1fr auto;
  }
}
.has-data-\[state\=checked\]\:border-primary {
  &:has(*[data-state="checked"]) {
    border-color: var(--primary);
  }
}
.has-data-\[state\=checked\]\:bg-primary\/5 {
  &:has(*[data-state="checked"]) {
    background-color: var(--primary);
    @supports (color: color-mix(in lab, red, red)) {
      background-color: color-mix(in oklab, var(--primary) 5%, transparent);
    }
  }
}
.has-data-\[variant\=inset\]\:bg-sidebar {
  &:has(*[data-variant="inset"]) {
    background-color: var(--sidebar);
  }
}
.has-\[\>\[data-slot\=checkbox-group\]\]\:gap-3 {
  &:has(>[data-slot=checkbox-group]) {
    gap: calc(var(--spacing) * 3);
  }
}
.has-\[\>\[data-slot\=field-content\]\]\:items-start {
  &:has(>[data-slot=field-content]) {
    align-items: flex-start;
  }
}
.has-\[\>\[data-slot\=field\]\]\:w-full {
  &:has(>[data-slot=field]) {
    width: 100%;
  }
}
.has-\[\>\[data-slot\=field\]\]\:flex-col {
  &:has(>[data-slot=field]) {
    flex-direction: column;
  }
}
.has-\[\>\[data-slot\=field\]\]\:rounded-md {
  &:has(>[data-slot=field]) {
    border-radius: calc(var(--radius) - 2px);
  }
}
.has-\[\>\[data-slot\=field\]\]\:border {
  &:has(>[data-slot=field]) {
    border-style: var(--tw-border-style);
    border-width: 1px;
  }
}
.has-\[\>\[data-slot\=radio-group\]\]\:gap-3 {
  &:has(>[data-slot=radio-group]) {
    gap: calc(var(--spacing) * 3);
  }
}
.has-\[\>svg\]\:px-2\.5 {
  &:has(>svg) {
    padding-inline: calc(var(--spacing) * 2.5);
  }
}
.has-\[\>svg\]\:px-3 {
  &:has(>svg) {
    padding-inline: calc(var(--spacing) * 3);
  }
}
.has-\[\>svg\]\:px-4 {
  &:has(>svg) {
    padding-inline: calc(var(--spacing) * 4);
  }
}
.aria-disabled\:pointer-events-none {
  &[aria-disabled="true"] {
    pointer-events: none;
  }
}
.aria-disabled\:opacity-50 {
  &[aria-disabled="true"] {
    opacity: 50%;
  }
}
.aria-invalid\:border-destructive {
  &[aria-invalid="true"] {
    border-color: var(--destructive);
  }
}
.aria-invalid\:ring-destructive\/20 {
  &[aria-invalid="true"] {
    --tw-ring-color: var(--destructive);
    @supports (color: color-mix(in lab, red, red)) {
      --tw-ring-color: color-mix(in oklab, var(--destructive) 20%, transparent);
    }
  }
}
.data-\[active\=true\]\:bg-sidebar-accent {
  &[data-active="true"] {
    background-color: var(--sidebar-accent);
  }
}
.data-\[active\=true\]\:font-medium {
  &[data-active="true"] {
    --tw-font-weight: var(--font-weight-medium);
    font-weight: var(--font-weight-medium);
  }
}
.data-\[active\=true\]\:text-sidebar-accent-foreground {
  &[data-active="true"] {
    color: var(--sidebar-accent-foreground);
  }
}
.data-\[disabled\]\:pointer-events-none {
  &[data-disabled] {
    pointer-events: none;
  }
}
.data-\[disabled\]\:opacity-50 {
  &[data-disabled] {
    opacity: 50%;
  }
}
.data-\[dragging\=true\]\:z-10 {
  &[data-dragging="true"] {
    z-index: 10;
  }
}
.data-\[dragging\=true\]\:opacity-80 {
  &[data-dragging="true"] {
    opacity: 80%;
  }
}
.data-\[inset\]\:pl-8 {
  &[data-inset] {
    padding-left: calc(var(--spacing) * 8);
  }
}
.data-\[invalid\=true\]\:text-destructive {
  &[data-invalid="true"] {
    color: var(--destructive);
  }
}
.data-\[orientation\=horizontal\]\:h-px {
  &[data-orientation="horizontal"] {
    height: 1px;
  }
}
.data-\[orientation\=horizontal\]\:w-full {
  &[data-orientation="horizontal"] {
    width: 100%;
  }
}
.data-\[orientation\=vertical\]\:h-4 {
  &[data-orientation="vertical"] {
    height: calc(var(--spacing) * 4);
  }
}
.data-\[orientation\=vertical\]\:h-full {
  &[data-orientation="vertical"] {
    height: 100%;
  }
}
.data-\[orientation\=vertical\]\:w-px {
  &[data-orientation="vertical"] {
    width: 1px;
  }
}
.data-\[placeholder\]\:text-muted-foreground {
  &[data-placeholder] {
    color: var(--muted-foreground);
  }
}
.data-\[side\=bottom\]\:translate-y-1 {
  &[data-side="bottom"] {
    --tw-translate-y: calc(var(--spacing) * 1);
    translate: var(--tw-translate-x) var(--tw-translate-y);
  }
}
.data-\[side\=bottom\]\:slide-in-from-top-2 {
  &[data-side="bottom"] {
    --tw-enter-translate-y: calc(2*var(--spacing)*-1);
  }
}
.data-\[side\=left\]\:-translate-x-1 {
  &[data-side="left"] {
    --tw-translate-x: calc(var(--spacing) * -1);
    translate: var(--tw-translate-x) var(--tw-translate-y);
  }
}
.data-\[side\=left\]\:slide-in-from-right-2 {
  &[data-side="left"] {
    --tw-enter-translate-x: calc(2*var(--spacing));
  }
}
.data-\[side\=right\]\:translate-x-1 {
  &[data-side="right"] {
    --tw-translate-x: calc(var(--spacing) * 1);
    translate: var(--tw-translate-x) var(--tw-translate-y);
  }
}
.data-\[side\=right\]\:slide-in-from-left-2 {
  &[data-side="right"] {
    --tw-enter-translate-x: calc(2*var(--spacing)*-1);
  }
}
.data-\[side\=top\]\:-translate-y-1 {
  &[data-side="top"] {
    --tw-translate-y: calc(var(--spacing) * -1);
    translate: var(--tw-translate-x) var(--tw-translate-y);
  }
}
.data-\[side\=top\]\:slide-in-from-bottom-2 {
  &[data-side="top"] {
    --tw-enter-translate-y: calc(2*var(--spacing));
  }
}
.data-\[size\=default\]\:h-9 {
  &[data-size="default"] {
    height: calc(var(--spacing) * 9);
  }
}
.data-\[size\=sm\]\:h-8 {
  &[data-size="sm"] {
    height: calc(var(--spacing) * 8);
  }
}
.\*\*\:data-\[slot\=badge\]\:size-5 {
  :is(& *) {
    &[data-slot="badge"] {
      width: calc(var(--spacing) * 5);
      height: calc(var(--spacing) * 5);
    }
  }
}
.\*\*\:data-\[slot\=badge\]\:rounded-full {
  :is(& *) {
    &[data-slot="badge"] {
      border-radius: calc(infinity * 1px);
    }
  }
}
.\*\*\:data-\[slot\=badge\]\:bg-muted-foreground\/30 {
  :is(& *) {
    &[data-slot="badge"] {
      background-color: var(--muted-foreground);
      @supports (color: color-mix(in lab, red, red)) {
        background-color: color-mix(in oklab, var(--muted-foreground) 30%, transparent);
      }
    }
  }
}
.\*\*\:data-\[slot\=badge\]\:px-1 {
  :is(& *) {
    &[data-slot="badge"] {
      padding-inline: calc(var(--spacing) * 1);
    }
  }
}
.\*\:data-\[slot\=card\]\:bg-gradient-to-t {
  :is(& > *) {
    &[data-slot="card"] {
      --tw-gradient-position: to top in oklab;
      background-image: linear-gradient(var(--tw-gradient-stops));
    }
  }
}
.\*\:data-\[slot\=card\]\:from-primary\/5 {
  :is(& > *) {
    &[data-slot="card"] {
      --tw-gradient-from: var(--primary);
      @supports (color: color-mix(in lab, red, red)) {
        --tw-gradient-from: color-mix(in oklab, var(--primary) 5%, transparent);
      }
      --tw-gradient-stops: var(--tw-gradient-via-stops, var(--tw-gradient-position), var(--tw-gradient-from) var(--tw-gradient-from-position), var(--tw-gradient-to) var(--tw-gradient-to-position));
    }
  }
}
.\*\:data-\[slot\=card\]\:to-card {
  :is(& > *) {
    &[data-slot="card"] {
      --tw-gradient-to: var(--card);
      --tw-gradient-stops: var(--tw-gradient-via-stops, var(--tw-gradient-position), var(--tw-gradient-from) var(--tw-gradient-from-position), var(--tw-gradient-to) var(--tw-gradient-to-position));
    }
  }
}
.\*\:data-\[slot\=card\]\:shadow-xs {
  :is(& > *) {
    &[data-slot="card"] {
      --tw-shadow: 0 1px 2px 0 var(--tw-shadow-color, rgb(0 0 0 / 0.05));
      box-shadow: var(--tw-inset-shadow), var(--tw-inset-ring-shadow), var(--tw-ring-offset-shadow), var(--tw-ring-shadow), var(--tw-shadow);
    }
  }
}
.data-\[slot\=checkbox-group\]\:gap-3 {
  &[data-slot="checkbox-group"] {
    gap: calc(var(--spacing) * 3);
  }
}
.\*\:data-\[slot\=select-value\]\:line-clamp-1 {
  :is(& > *) {
    &[data-slot="select-value"] {
      overflow: hidden;
      display: -webkit-box;
      -webkit-box-orient: vertical;
      -webkit-line-clamp: 1;
    }
  }
}
.\*\:data-\[slot\=select-value\]\:flex {
  :is(& > *) {
    &[data-slot="select-value"] {
      display: flex;
    }
  }
}
.\*\:data-\[slot\=select-value\]\:items-center {
  :is(& > *) {
    &[data-slot="select-value"] {
      align-items: center;
    }
  }
}
.\*\:data-\[slot\=select-value\]\:gap-2 {
  :is(& > *) {
    &[data-slot="select-value"] {
      gap: calc(var(--spacing) * 2);
    }
  }
}
.\*\*\:data-\[slot\=select-value\]\:block {
  :is(& *) {
    &[data-slot="select-value"] {
      display: block;
    }
  }
}
.\*\*\:data-\[slot\=select-value\]\:truncate {
  :is(& *) {
    &[data-slot="select-value"] {
      overflow: hidden;
      text-overflow: ellipsis;
      white-space: nowrap;
    }
  }
}
.data-\[slot\=sidebar-menu-button\]\:\!p-1\.5 {
  &[data-slot="sidebar-menu-button"] {
    padding: calc(var(--spacing) * 1.5) !important;
  }
}
.\*\*\:data-\[slot\=table-cell\]\:first\:w-8 {
  :is(& *) {
    &[data-slot="table-cell"] {
      &:first-child {
        width: calc(var(--spacing) * 8);
      }
    }
  }
}
.\*\:data-\[slot\=toggle-group-item\]\:\!px-4 {
  :is(& > *) {
    &[data-slot="toggle-group-item"] {
      padding-inline: calc(var(--spacing) * 4) !important;
    }
  }
}
.data-\[state\=active\]\:bg-background {
  &[data-state="active"] {
    background-color: var(--background);
  }
}
.data-\[state\=active\]\:shadow-sm {
  &[data-state="active"] {
    --tw-shadow: 0 1px 3px 0 var(--tw-shadow-color, rgb(0 0 0 / 0.1)), 0 1px 2px -1px var(--tw-shadow-color, rgb(0 0 0 / 0.1));
    box-shadow: var(--tw-inset-shadow), var(--tw-inset-ring-shadow), var(--tw-ring-offset-shadow), var(--tw-ring-shadow), var(--tw-shadow);
  }
}
.data-\[state\=checked\]\:border-primary {
  &[data-state="checked"] {
    border-color: var(--primary);
  }
}
.data-\[state\=checked\]\:bg-primary {
  &[data-state="checked"] {
    background-color: var(--primary);
  }
}
.data-\[state\=checked\]\:text-primary-foreground {
  &[data-state="checked"] {
    color: var(--primary-foreground);
  }
}
.data-\[state\=closed\]\:animate-out {
  &[data-state="closed"] {
    animation: exit var(--tw-animation-duration,var(--tw-duration,.15s))var(--tw-ease,ease)var(--tw-animation-delay,0s)var(--tw-animation-iteration-count,1)var(--tw-animation-direction,normal)var(--tw-animation-fill-mode,none);
  }
}
.data-\[state\=closed\]\:duration-300 {
  &[data-state="closed"] {
    --tw-duration: 300ms;
    transition-duration: 300ms;
  }
}
.data-\[state\=closed\]\:fade-out-0 {
  &[data-state="closed"] {
    --tw-exit-opacity: calc(0/100);
    --tw-exit-opacity: 0;
  }
}
.data-\[state\=closed\]\:zoom-out-95 {
  &[data-state="closed"] {
    --tw-exit-scale: calc(95*1%);
    --tw-exit-scale: .95;
  }
}
.data-\[state\=closed\]\:slide-out-to-bottom {
  &[data-state="closed"] {
    --tw-exit-translate-y: 100%;
  }
}
.data-\[state\=closed\]\:slide-out-to-left {
  &[data-state="closed"] {
    --tw-exit-translate-x: -100%;
  }
}
.data-\[state\=closed\]\:slide-out-to-right {
  &[data-state="closed"] {
    --tw-exit-translate-x: 100%;
  }
}
.data-\[state\=closed\]\:slide-out-to-top {
  &[data-state="closed"] {
    --tw-exit-translate-y: -100%;
  }
}
.data-\[state\=on\]\:bg-accent {
  &[data-state="on"] {
    background-color: var(--accent);
  }
}
.data-\[state\=on\]\:text-accent-foreground {
  &[data-state="on"] {
    color: var(--accent-foreground);
  }
}
.data-\[state\=open\]\:animate-in {
  &[data-state="open"] {
    animation: enter var(--tw-animation-duration,var(--tw-duration,.15s))var(--tw-ease,ease)var(--tw-animation-delay,0s)var(--tw-animation-iteration-count,1)var(--tw-animation-direction,normal)var(--tw-animation-fill-mode,none);
  }
}
.data-\[state\=open\]\:bg-accent {
  &[data-state="open"] {
    background-color: var(--accent);
  }
}
.data-\[state\=open\]\:bg-muted {
  &[data-state="open"] {
    background-color: var(--muted);
  }
}
.data-\[state\=open\]\:bg-secondary {
  &[data-state="open"] {
    background-color: var(--secondary);
  }
}
.data-\[state\=open\]\:bg-sidebar-accent {
  &[data-state="open"] {
    background-color: var(--sidebar-accent);
  }
}
.data-\[state\=open\]\:text-accent-foreground {
  &[data-state="open"] {
    color: var(--accent-foreground);
  }
}
.data-\[state\=open\]\:text-sidebar-accent-foreground {
  &[data-state="open"] {
    color: var(--sidebar-accent-foreground);
  }
}
.data-\[state\=open\]\:opacity-100 {
  &[data-state="open"] {
    opacity: 100%;
  }
}
.data-\[state\=open\]\:duration-500 {
  &[data-state="open"] {
    --tw-duration: 500ms;
    transition-duration: 500ms;
  }
}
.data-\[state\=open\]\:fade-in-0 {
  &[data-state="open"] {
    --tw-enter-opacity: calc(0/100);
    --tw-enter-opacity: 0;
  }
}
.data-\[state\=open\]\:zoom-in-95 {
  &[data-state="open"] {
    --tw-enter-scale: calc(95*1%);
    --tw-enter-scale: .95;
  }
}
.data-\[state\=open\]\:slide-in-from-bottom {
  &[data-state="open"] {
    --tw-enter-translate-y: 100%;
  }
}
.data-\[state\=open\]\:slide-in-from-left {
  &[data-state="open"] {
    --tw-enter-translate-x: -100%;
  }
}
.data-\[state\=open\]\:slide-in-from-right {
  &[data-state="open"] {
    --tw-enter-translate-x: 100%;
  }
}
.data-\[state\=open\]\:slide-in-from-top {
  &[data-state="open"] {
    --tw-enter-translate-y: -100%;
  }
}
.data-\[state\=open\]\:hover\:bg-sidebar-accent {
  &[data-state="open"] {
    &:hover {
      @media (hover: hover) {
        background-color: var(--sidebar-accent);
      }
    }
  }
}
.data-\[state\=open\]\:hover\:text-sidebar-accent-foreground {
  &[data-state="open"] {
    &:hover {
      @media (hover: hover) {
        color: var(--sidebar-accent-foreground);
      }
    }
  }
}
.data-\[state\=selected\]\:bg-muted {
  &[data-state="selected"] {
    background-color: var(--muted);
  }
}
.data-\[variant\=destructive\]\:text-destructive {
  &[data-variant="destructive"] {
    color: var(--destructive);
  }
}
.data-\[variant\=destructive\]\:focus\:bg-destructive\/10 {
  &[data-variant="destructive"] {
    &:focus {
      background-color: var(--destructive);
      @supports (color: color-mix(in lab, red, red)) {
        background-color: color-mix(in oklab, var(--destructive) 10%, transparent);
      }
    }
  }
}
.data-\[variant\=destructive\]\:focus\:text-destructive {
  &[data-variant="destructive"] {
    &:focus {
      color: var(--destructive);
    }
  }
}
.data-\[variant\=label\]\:text-sm {
  &[data-variant="label"] {
    font-size: var(--text-sm);
    line-height: var(--tw-leading, var(--text-sm--line-height));
  }
}
.data-\[variant\=legend\]\:text-base {
  &[data-variant="legend"] {
    font-size: var(--text-base);
    line-height: var(--tw-leading, var(--text-base--line-height));
  }
}
.data-\[variant\=outline\]\:border-l-0 {
  &[data-variant="outline"] {
    border-left-style: var(--tw-border-style);
    border-left-width: 0px;
  }
}
.data-\[variant\=outline\]\:shadow-xs {
  &[data-variant="outline"] {
    --tw-shadow: 0 1px 2px 0 var(--tw-shadow-color, rgb(0 0 0 / 0.05));
    box-shadow: var(--tw-inset-shadow), var(--tw-inset-ring-shadow), var(--tw-ring-offset-shadow), var(--tw-ring-shadow), var(--tw-shadow);
  }
}
.data-\[variant\=outline\]\:first\:border-l {
  &[data-variant="outline"] {
    &:first-child {
      border-left-style: var(--tw-border-style);
      border-left-width: 1px;
    }
  }
}
.data-\[vaul-drawer-direction\=bottom\]\:inset-x-0 {
  &[data-vaul-drawer-direction="bottom"] {
    inset-inline: calc(var(--spacing) * 0);
  }
}
.data-\[vaul-drawer-direction\=bottom\]\:bottom-0 {
  &[data-vaul-drawer-direction="bottom"] {
    bottom: calc(var(--spacing) * 0);
  }
}
.data-\[vaul-drawer-direction\=bottom\]\:mt-24 {
  &[data-vaul-drawer-direction="bottom"] {
    margin-top: calc(var(--spacing) * 24);
  }
}
.data-\[vaul-drawer-direction\=bottom\]\:max-h-\[80vh\] {
  &[data-vaul-drawer-direction="bottom"] {
    max-height: 80vh;
  }
}
.data-\[vaul-drawer-direction\=bottom\]\:rounded-t-lg {
  &[data-vaul-drawer-direction="bottom"] {
    border-top-left-radius: var(--radius);
    border-top-right-radius: var(--radius);
  }
}
.data-\[vaul-drawer-direction\=bottom\]\:border-t {
  &[data-vaul-drawer-direction="bottom"] {
    border-top-style: var(--tw-border-style);
    border-top-width: 1px;
  }
}
.data-\[vaul-drawer-direction\=left\]\:inset-y-0 {
  &[data-vaul-drawer-direction="left"] {
    inset-block: calc(var(--spacing) * 0);
  }
}
.data-\[vaul-drawer-direction\=left\]\:left-0 {
  &[data-vaul-drawer-direction="left"] {
    left: calc(var(--spacing) * 0);
  }
}
.data-\[vaul-drawer-direction\=left\]\:w-3\/4 {
  &[data-vaul-drawer-direction="left"] {
    width: calc(3/4 * 100%);
  }
}
.data-\[vaul-drawer-direction\=left\]\:border-r {
  &[data-vaul-drawer-direction="left"] {
    border-right-style: var(--tw-border-style);
    border-right-width: 1px;
  }
}
.data-\[vaul-drawer-direction\=right\]\:inset-y-0 {
  &[data-vaul-drawer-direction="right"] {
    inset-block: calc(var(--spacing) * 0);
  }
}
.data-\[vaul-drawer-direction\=right\]\:right-0 {
  &[data-vaul-drawer-direction="right"] {
    right: calc(var(--spacing) * 0);
  }
}
.data-\[vaul-drawer-direction\=right\]\:w-3\/4 {
  &[data-vaul-drawer-direction="right"] {
    width: calc(3/4 * 100%);
  }
}
.data-\[vaul-drawer-direction\=right\]\:border-l {
  &[data-vaul-drawer-direction="right"] {
    border-left-style: var(--tw-border-style);
    border-left-width: 1px;
  }
}
.data-\[vaul-drawer-direction\=top\]\:inset-x-0 {
  &[data-vaul-drawer-direction="top"] {
    inset-inline: calc(var(--spacing) * 0);
  }
}
.data-\[vaul-drawer-direction\=top\]\:top-0 {
  &[data-vaul-drawer-direction="top"] {
    top: calc(var(--spacing) * 0);
  }
}
.data-\[vaul-drawer-direction\=top\]\:mb-24 {
  &[data-vaul-drawer-direction="top"] {
    margin-bottom: calc(var(--spacing) * 24);
  }
}
.data-\[vaul-drawer-direction\=top\]\:max-h-\[80vh\] {
  &[data-vaul-drawer-direction="top"] {
    max-height: 80vh;
  }
}
.data-\[vaul-drawer-direction\=top\]\:rounded-b-lg {
  &[data-vaul-drawer-direction="top"] {
    border-bottom-right-radius: var(--radius);
    border-bottom-left-radius: var(--radius);
  }
}
.data-\[vaul-drawer-direction\=top\]\:border-b {
  &[data-vaul-drawer-direction="top"] {
    border-bottom-style: var(--tw-border-style);
    border-bottom-width: 1px;
  }
}
.nth-last-2\:-mt-1 {
  &:nth-last-child(2) {
    margin-top: calc(var(--spacing) * -1);
  }
}
.sm\:flex {
  @media (width >= 40rem) {
    display: flex;
  }
}
.sm\:max-w-sm {
  @media (width >= 40rem) {
    max-width: var(--container-sm);
  }
}
.sm\:items-start {
  @media (width >= 40rem) {
    align-items: flex-start;
  }
}
.sm\:gap-2\.5 {
  @media (width >= 40rem) {
    gap: calc(var(--spacing) * 2.5);
  }
}
.sm\:p-20 {
  @media (width >= 40rem) {
    padding: calc(var(--spacing) * 20);
  }
}
.sm\:px-6 {
  @media (width >= 40rem) {
    padding-inline: calc(var(--spacing) * 6);
  }
}
.sm\:pt-6 {
  @media (width >= 40rem) {
    padding-top: calc(var(--spacing) * 6);
  }
}
.data-\[vaul-drawer-direction\=left\]\:sm\:max-w-sm {
  &[data-vaul-drawer-direction="left"] {
    @media (width >= 40rem) {
      max-width: var(--container-sm);
    }
  }
}
.data-\[vaul-drawer-direction\=right\]\:sm\:max-w-sm {
  &[data-vaul-drawer-direction="right"] {
    @media (width >= 40rem) {
      max-width: var(--container-sm);
    }
  }
}
.md\:block {
  @media (width >= 48rem) {
    display: block;
  }
}
.md\:flex {
  @media (width >= 48rem) {
    display: flex;
  }
}
.md\:gap-1\.5 {
  @media (width >= 48rem) {
    gap: calc(var(--spacing) * 1.5);
  }
}
.md\:gap-6 {
  @media (width >= 48rem) {
    gap: calc(var(--spacing) * 6);
  }
}
.md\:p-10 {
  @media (width >= 48rem) {
    padding: calc(var(--spacing) * 10);
  }
}
.md\:py-6 {
  @media (width >= 48rem) {
    padding-block: calc(var(--spacing) * 6);
  }
}
.md\:text-left {
  @media (width >= 48rem) {
    text-align: left;
  }
}
.md\:text-sm {
  @media (width >= 48rem) {
    font-size: var(--text-sm);
    line-height: var(--tw-leading, var(--text-sm--line-height));
  }
}
.md\:opacity-0 {
  @media (width >= 48rem) {
    opacity: 0%;
  }
}
.md\:peer-data-\[variant\=inset\]\:m-2 {
  @media (width >= 48rem) {
    &:is(:where(.peer)[data-variant="inset"] ~ *) {
      margin: calc(var(--spacing) * 2);
    }
  }
}
.md\:peer-data-\[variant\=inset\]\:ml-0 {
  @media (width >= 48rem) {
    &:is(:where(.peer)[data-variant="inset"] ~ *) {
      margin-left: calc(var(--spacing) * 0);
    }
  }
}
.md\:peer-data-\[variant\=inset\]\:rounded-xl {
  @media (width >= 48rem) {
    &:is(:where(.peer)[data-variant="inset"] ~ *) {
      border-radius: calc(var(--radius) + 4px);
    }
  }
}
.md\:peer-data-\[variant\=inset\]\:shadow-sm {
  @media (width >= 48rem) {
    &:is(:where(.peer)[data-variant="inset"] ~ *) {
      --tw-shadow: 0 1px 3px 0 var(--tw-shadow-color, rgb(0 0 0 / 0.1)), 0 1px 2px -1px var(--tw-shadow-color, rgb(0 0 0 / 0.1));
      box-shadow: var(--tw-inset-shadow), var(--tw-inset-ring-shadow), var(--tw-ring-offset-shadow), var(--tw-ring-shadow), var(--tw-shadow);
    }
  }
}
.md\:peer-data-\[variant\=inset\]\:peer-data-\[state\=collapsed\]\:ml-2 {
  @media (width >= 48rem) {
    &:is(:where(.peer)[data-variant="inset"] ~ *) {
      &:is(:where(.peer)[data-state="collapsed"] ~ *) {
        margin-left: calc(var(--spacing) * 2);
      }
    }
  }
}
.md\:after\:hidden {
  @media (width >= 48rem) {
    &::after {
      content: var(--tw-content);
      display: none;
    }
  }
}
.lg\:ml-0 {
  @media (width >= 64rem) {
    margin-left: calc(var(--spacing) * 0);
  }
}
.lg\:flex {
  @media (width >= 64rem) {
    display: flex;
  }
}
.lg\:hidden {
  @media (width >= 64rem) {
    display: none;
  }
}
.lg\:inline {
  @media (width >= 64rem) {
    display: inline;
  }
}
.lg\:w-fit {
  @media (width >= 64rem) {
    width: -moz-fit-content;
    width: fit-content;
  }
}
.lg\:gap-2 {
  @media (width >= 64rem) {
    gap: calc(var(--spacing) * 2);
  }
}
.lg\:px-6 {
  @media (width >= 64rem) {
    padding-inline: calc(var(--spacing) * 6);
  }
}
.\@\[250px\]\/card\:text-3xl {
  @container card (width >= 250px) {
    font-size: var(--text-3xl);
    line-height: var(--tw-leading, var(--text-3xl--line-height));
  }
}
.\@\[540px\]\/card\:block {
  @container card (width >= 540px) {
    display: block;
  }
}
.\@\[540px\]\/card\:hidden {
  @container card (width >= 540px) {
    display: none;
  }
}
.\@\[767px\]\/card\:flex {
  @container card (width >= 767px) {
    display: flex;
  }
}
.\@\[767px\]\/card\:hidden {
  @container card (width >= 767px) {
    display: none;
  }
}
.\@md\/field-group\:flex-row {
  @container field-group (width >= 28rem) {
    flex-direction: row;
  }
}
.\@md\/field-group\:items-center {
  @container field-group (width >= 28rem) {
    align-items: center;
  }
}
.\@md\/field-group\:has-\[\>\[data-slot\=field-content\]\]\:items-start {
  @container field-group (width >= 28rem) {
    &:has(>[data-slot=field-content]) {
      align-items: flex-start;
    }
  }
}
.\@xl\/main\:grid-cols-2 {
  @container main (width >= 36rem) {
    grid-template-columns: repeat(2, minmax(0, 1fr));
  }
}
.\@4xl\/main\:flex {
  @container main (width >= 56rem) {
    display: flex;
  }
}
.\@4xl\/main\:hidden {
  @container main (width >= 56rem) {
    display: none;
  }
}
.\@5xl\/main\:grid-cols-4 {
  @container main (width >= 64rem) {
    grid-template-columns: repeat(4, minmax(0, 1fr));
  }
}
.dark\:scale-0 {
  &:is(.dark *) {
    --tw-scale-x: 0%;
    --tw-scale-y: 0%;
    --tw-scale-z: 0%;
    scale: var(--tw-scale-x) var(--tw-scale-y);
  }
}
.dark\:scale-100 {
  &:is(.dark *) {
    --tw-scale-x: 100%;
    --tw-scale-y: 100%;
    --tw-scale-z: 100%;
    scale: var(--tw-scale-x) var(--tw-scale-y);
  }
}
.dark\:-rotate-90 {
  &:is(.dark *) {
    rotate: calc(90deg * -1);
  }
}
.dark\:rotate-0 {
  &:is(.dark *) {
    rotate: 0deg;
  }
}
.dark\:border-input {
  &:is(.dark *) {
    border-color: var(--input);
  }
}
.dark\:bg-destructive\/60 {
  &:is(.dark *) {
    background-color: var(--destructive);
    @supports (color: color-mix(in lab, red, red)) {
      background-color: color-mix(in oklab, var(--destructive) 60%, transparent);
    }
  }
}
.dark\:bg-input\/30 {
  &:is(.dark *) {
    background-color: var(--input);
    @supports (color: color-mix(in lab, red, red)) {
      background-color: color-mix(in oklab, var(--input) 30%, transparent);
    }
  }
}
.dark\:bg-transparent {
  &:is(.dark *) {
    background-color: transparent;
  }
}
.dark\:fill-green-400 {
  &:is(.dark *) {
    fill: var(--color-green-400);
  }
}
.dark\:text-foreground {
  &:is(.dark *) {
    color: var(--foreground);
  }
}
.dark\:text-muted-foreground {
  &:is(.dark *) {
    color: var(--muted-foreground);
  }
}
.dark\:hover\:bg-accent\/50 {
  &:is(.dark *) {
    &:hover {
      @media (hover: hover) {
        background-color: var(--accent);
        @supports (color: color-mix(in lab, red, red)) {
          background-color: color-mix(in oklab, var(--accent) 50%, transparent);
        }
      }
    }
  }
}
.dark\:hover\:bg-input\/30 {
  &:is(.dark *) {
    &:hover {
      @media (hover: hover) {
        background-color: var(--input);
        @supports (color: color-mix(in lab, red, red)) {
          background-color: color-mix(in oklab, var(--input) 30%, transparent);
        }
      }
    }
  }
}
.dark\:hover\:bg-input\/50 {
  &:is(.dark *) {
    &:hover {
      @media (hover: hover) {
        background-color: var(--input);
        @supports (color: color-mix(in lab, red, red)) {
          background-color: color-mix(in oklab, var(--input) 50%, transparent);
        }
      }
    }
  }
}
.dark\:focus-visible\:bg-input\/30 {
  &:is(.dark *) {
    &:focus-visible {
      background-color: var(--input);
      @supports (color: color-mix(in lab, red, red)) {
        background-color: color-mix(in oklab, var(--input) 30%, transparent);
      }
    }
  }
}
.dark\:focus-visible\:ring-destructive\/40 {
  &:is(.dark *) {
    &:focus-visible {
      --tw-ring-color: var(--destructive);
      @supports (color: color-mix(in lab, red, red)) {
        --tw-ring-color: color-mix(in oklab, var(--destructive) 40%, transparent);
      }
    }
  }
}
.dark\:has-data-\[state\=checked\]\:bg-primary\/10 {
  &:is(.dark *) {
    &:has(*[data-state="checked"]) {
      background-color: var(--primary);
      @supports (color: color-mix(in lab, red, red)) {
        background-color: color-mix(in oklab, var(--primary) 10%, transparent);
      }
    }
  }
}
.dark\:aria-invalid\:ring-destructive\/40 {
  &:is(.dark *) {
    &[aria-invalid="true"] {
      --tw-ring-color: var(--destructive);
      @supports (color: color-mix(in lab, red, red)) {
        --tw-ring-color: color-mix(in oklab, var(--destructive) 40%, transparent);
      }
    }
  }
}
.dark\:\*\:data-\[slot\=card\]\:bg-card {
  &:is(.dark *) {
    :is(& > *) {
      &[data-slot="card"] {
        background-color: var(--card);
      }
    }
  }
}
.dark\:data-\[state\=active\]\:border-input {
  &:is(.dark *) {
    &[data-state="active"] {
      border-color: var(--input);
    }
  }
}
.dark\:data-\[state\=active\]\:bg-input\/30 {
  &:is(.dark *) {
    &[data-state="active"] {
      background-color: var(--input);
      @supports (color: color-mix(in lab, red, red)) {
        background-color: color-mix(in oklab, var(--input) 30%, transparent);
      }
    }
  }
}
.dark\:data-\[state\=active\]\:text-foreground {
  &:is(.dark *) {
    &[data-state="active"] {
      color: var(--foreground);
    }
  }
}
.dark\:data-\[state\=checked\]\:bg-primary {
  &:is(.dark *) {
    &[data-state="checked"] {
      background-color: var(--primary);
    }
  }
}
.dark\:data-\[variant\=destructive\]\:focus\:bg-destructive\/20 {
  &:is(.dark *) {
    &[data-variant="destructive"] {
      &:focus {
        background-color: var(--destructive);
        @supports (color: color-mix(in lab, red, red)) {
          background-color: color-mix(in oklab, var(--destructive) 20%, transparent);
        }
      }
    }
  }
}
.\[\&_\.recharts-cartesian-axis-tick_text\]\:fill-muted-foreground {
  & .recharts-cartesian-axis-tick text {
    fill: var(--muted-foreground);
  }
}
.\[\&_\.recharts-cartesian-grid_line\[stroke\=\'\#ccc\'\]\]\:stroke-border\/50 {
  & .recharts-cartesian-grid line[stroke='#ccc'] {
    stroke: var(--border);
    @supports (color: color-mix(in lab, red, red)) {
      stroke: color-mix(in oklab, var(--border) 50%, transparent);
    }
  }
}
.\[\&_\.recharts-curve\.recharts-tooltip-cursor\]\:stroke-border {
  & .recharts-curve.recharts-tooltip-cursor {
    stroke: var(--border);
  }
}
.\[\&_\.recharts-dot\[stroke\=\'\#fff\'\]\]\:stroke-transparent {
  & .recharts-dot[stroke='#fff'] {
    stroke: transparent;
  }
}
.\[\&_\.recharts-layer\]\:outline-hidden {
  & .recharts-layer {
    --tw-outline-style: none;
    outline-style: none;
    @media (forced-colors: active) {
      outline: 2px solid transparent;
      outline-offset: 2px;
    }
  }
}
.\[\&_\.recharts-polar-grid_\[stroke\=\'\#ccc\'\]\]\:stroke-border {
  & .recharts-polar-grid [stroke='#ccc'] {
    stroke: var(--border);
  }
}
.\[\&_\.recharts-radial-bar-background-sector\]\:fill-muted {
  & .recharts-radial-bar-background-sector {
    fill: var(--muted);
  }
}
.\[\&_\.recharts-rectangle\.recharts-tooltip-cursor\]\:fill-muted {
  & .recharts-rectangle.recharts-tooltip-cursor {
    fill: var(--muted);
  }
}
.\[\&_\.recharts-reference-line_\[stroke\=\'\#ccc\'\]\]\:stroke-border {
  & .recharts-reference-line [stroke='#ccc'] {
    stroke: var(--border);
  }
}
.\[\&_\.recharts-sector\]\:outline-hidden {
  & .recharts-sector {
    --tw-outline-style: none;
    outline-style: none;
    @media (forced-colors: active) {
      outline: 2px solid transparent;
      outline-offset: 2px;
    }
  }
}
.\[\&_\.recharts-sector\[stroke\=\'\#fff\'\]\]\:stroke-transparent {
  & .recharts-sector[stroke='#fff'] {
    stroke: transparent;
  }
}
.\[\&_\.recharts-surface\]\:outline-hidden {
  & .recharts-surface {
    --tw-outline-style: none;
    outline-style: none;
    @media (forced-colors: active) {
      outline: 2px solid transparent;
      outline-offset: 2px;
    }
  }
}
.\[\&_svg\]\:pointer-events-none {
  & svg {
    pointer-events: none;
  }
}
.\[\&_svg\]\:shrink-0 {
  & svg {
    flex-shrink: 0;
  }
}
.\[\&_svg\:not\(\[class\*\=\'size-\'\]\)\]\:size-4 {
  & svg:not([class*='size-']) {
    width: calc(var(--spacing) * 4);
    height: calc(var(--spacing) * 4);
  }
}
.\[\&_svg\:not\(\[class\*\=\'text-\'\]\)\]\:text-muted-foreground {
  & svg:not([class*='text-']) {
    color: var(--muted-foreground);
  }
}
.\[\&_tr\]\:border-b {
  & tr {
    border-bottom-style: var(--tw-border-style);
    border-bottom-width: 1px;
  }
}
.\[\&_tr\:last-child\]\:border-0 {
  & tr:last-child {
    border-style: var(--tw-border-style);
    border-width: 0px;
  }
}
.\[\&\:has\(\[role\=checkbox\]\)\]\:pr-0 {
  &:has([role=checkbox]) {
    padding-right: calc(var(--spacing) * 0);
  }
}
.\[\.border-b\]\:pb-6 {
  &:is(.border-b) {
    padding-bottom: calc(var(--spacing) * 6);
  }
}
.\[\.border-t\]\:pt-6 {
  &:is(.border-t) {
    padding-top: calc(var(--spacing) * 6);
  }
}
.\*\:\[span\]\:last\:flex {
  :is(& > *) {
    &:is(span) {
      &:last-child {
        display: flex;
      }
    }
  }
}
.\*\:\[span\]\:last\:items-center {
  :is(& > *) {
    &:is(span) {
      &:last-child {
        align-items: center;
      }
    }
  }
}
.\*\:\[span\]\:last\:gap-2 {
  :is(& > *) {
    &:is(span) {
      &:last-child {
        gap: calc(var(--spacing) * 2);
      }
    }
  }
}
.data-\[variant\=destructive\]\:\*\:\[svg\]\:\!text-destructive {
  &[data-variant="destructive"] {
    :is(& > *) {
      &:is(svg) {
        color: var(--destructive) !important;
      }
    }
  }
}
.\[\&\>\*\]\:w-full {
  &>* {
    width: 100%;
  }
}
.\[\&\>\*\]\:data-\[slot\=field\]\:p-4 {
  &>* {
    &[data-slot="field"] {
      padding: calc(var(--spacing) * 4);
    }
  }
}
.\@md\/field-group\:\[\&\>\*\]\:w-auto {
  @container field-group (width >= 28rem) {
    &>* {
      width: auto;
    }
  }
}
.\[\&\>\.sr-only\]\:w-auto {
  &>.sr-only {
    width: auto;
  }
}
.\[\&\>\[data-slot\=field-group\]\]\:gap-4 {
  &>[data-slot=field-group] {
    gap: calc(var(--spacing) * 4);
  }
}
.\[\&\>\[data-slot\=field-label\]\]\:flex-auto {
  &>[data-slot=field-label] {
    flex: auto;
  }
}
.\@md\/field-group\:\[\&\>\[data-slot\=field-label\]\]\:flex-auto {
  @container field-group (width >= 28rem) {
    &>[data-slot=field-label] {
      flex: auto;
    }
  }
}
.\[\&\>\[role\=checkbox\]\]\:translate-y-\[2px\] {
  &>[role=checkbox] {
    --tw-translate-y: 2px;
    translate: var(--tw-translate-x) var(--tw-translate-y);
  }
}
.has-\[\>\[data-slot\=field-content\]\]\:\[\&\>\[role\=checkbox\]\,\[role\=radio\]\]\:mt-px {
  &:has(>[data-slot=field-content]) {
    &>[role=checkbox],[role=radio] {
      margin-top: 1px;
    }
  }
}
.\@md\/field-group\:has-\[\>\[data-slot\=field-content\]\]\:\[\&\>\[role\=checkbox\]\,\[role\=radio\]\]\:mt-px {
  @container field-group (width >= 28rem) {
    &:has(>[data-slot=field-content]) {
      &>[role=checkbox],[role=radio] {
        margin-top: 1px;
      }
    }
  }
}
.\[\&\>a\]\:underline {
  &>a {
    text-decoration-line: underline;
  }
}
.\[\&\>a\]\:underline-offset-4 {
  &>a {
    text-underline-offset: 4px;
  }
}
.\[\&\>a\:hover\]\:text-primary {
  &>a:hover {
    color: var(--primary);
  }
}
.\[\&\>button\]\:hidden {
  &>button {
    display: none;
  }
}
.\[\&\>span\:last-child\]\:truncate {
  &>span:last-child {
    overflow: hidden;
    text-overflow: ellipsis;
    white-space: nowrap;
  }
}
.\[\&\>svg\]\:pointer-events-none {
  &>svg {
    pointer-events: none;
  }
}
.\[\&\>svg\]\:size-3 {
  &>svg {
    width: calc(var(--spacing) * 3);
    height: calc(var(--spacing) * 3);
  }
}
.\[\&\>svg\]\:size-3\.5 {
  &>svg {
    width: calc(var(--spacing) * 3.5);
    height: calc(var(--spacing) * 3.5);
  }
}
.\[\&\>svg\]\:size-4 {
  &>svg {
    width: calc(var(--spacing) * 4);
    height: calc(var(--spacing) * 4);
  }
}
.\[\&\>svg\]\:h-2\.5 {
  &>svg {
    height: calc(var(--spacing) * 2.5);
  }
}
.\[\&\>svg\]\:h-3 {
  &>svg {
    height: calc(var(--spacing) * 3);
  }
}
.\[\&\>svg\]\:w-2\.5 {
  &>svg {
    width: calc(var(--spacing) * 2.5);
  }
}
.\[\&\>svg\]\:w-3 {
  &>svg {
    width: calc(var(--spacing) * 3);
  }
}
.\[\&\>svg\]\:shrink-0 {
  &>svg {
    flex-shrink: 0;
  }
}
.\[\&\>svg\]\:text-muted-foreground {
  &>svg {
    color: var(--muted-foreground);
  }
}
.\[\&\>svg\]\:text-sidebar-accent-foreground {
  &>svg {
    color: var(--sidebar-accent-foreground);
  }
}
.\[\&\>tr\]\:last\:border-b-0 {
  &>tr {
    &:last-child {
      border-bottom-style: var(--tw-border-style);
      border-bottom-width: 0px;
    }
  }
}
.\[\[data-side\=left\]\[data-collapsible\=offcanvas\]_\&\]\:-right-2 {
  [data-side=left][data-collapsible=offcanvas] & {
    right: calc(var(--spacing) * -2);
  }
}
.\[\[data-side\=left\]\[data-state\=collapsed\]_\&\]\:cursor-e-resize {
  [data-side=left][data-state=collapsed] & {
    cursor: e-resize;
  }
}
.\[\[data-side\=right\]\[data-collapsible\=offcanvas\]_\&\]\:-left-2 {
  [data-side=right][data-collapsible=offcanvas] & {
    left: calc(var(--spacing) * -2);
  }
}
.\[\[data-side\=right\]\[data-state\=collapsed\]_\&\]\:cursor-w-resize {
  [data-side=right][data-state=collapsed] & {
    cursor: w-resize;
  }
}
.\[\[data-variant\=legend\]\+\&\]\:-mt-1\.5 {
  [data-variant=legend]+& {
    margin-top: calc(var(--spacing) * -1.5);
  }
}
.\[a\&\]\:hover\:bg-accent {
  a& {
    &:hover {
      @media (hover: hover) {
        background-color: var(--accent);
      }
    }
  }
}
.\[a\&\]\:hover\:bg-destructive\/90 {
  a& {
    &:hover {
      @media (hover: hover) {
        background-color: var(--destructive);
        @supports (color: color-mix(in lab, red, red)) {
          background-color: color-mix(in oklab, var(--destructive) 90%, transparent);
        }
      }
    }
  }
}
.\[a\&\]\:hover\:bg-primary\/90 {
  a& {
    &:hover {
      @media (hover: hover) {
        background-color: var(--primary);
        @supports (color: color-mix(in lab, red, red)) {
          background-color: color-mix(in oklab, var(--primary) 90%, transparent);
        }
      }
    }
  }
}
.\[a\&\]\:hover\:bg-secondary\/90 {
  a& {
    &:hover {
      @media (hover: hover) {
        background-color: var(--secondary);
        @supports (color: color-mix(in lab, red, red)) {
          background-color: color-mix(in oklab, var(--secondary) 90%, transparent);
        }
      }
    }
  }
}
.\[a\&\]\:hover\:text-accent-foreground {
  a& {
    &:hover {
      @media (hover: hover) {
        color: var(--accent-foreground);
      }
    }
  }
}
html, body, #__next {
  height: 100%;
}
body {
  background-color: var(--color-white);
  color: var(--color-black);
  -webkit-font-smoothing: antialiased;
  -moz-osx-font-smoothing: grayscale;
}
.min-h-svh {
  min-height: 90vh;
}
@layer theme, base, components, utilities;
@layer theme {
  :root, :host {
    --color-red-500: oklch(63.7% 0.237 25.331);
    --color-green-400: oklch(79.2% 0.209 151.711);
    --color-green-500: oklch(72.3% 0.219 149.579);
    --color-blue-500: oklch(62.3% 0.214 259.815);
    --color-gray-300: oklch(87.2% 0.01 258.338);
    --color-black: #000;
    --color-white: #fff;
    --spacing: 0.25rem;
    --container-sm: 24rem;
    --container-md: 28rem;
    --text-xs: 0.75rem;
    --text-xs--line-height: calc(1 / 0.75);
    --text-sm: 0.875rem;
    --text-sm--line-height: calc(1.25 / 0.875);
    --text-base: 1rem;
    --text-base--line-height: calc(1.5 / 1);
    --text-2xl: 1.5rem;
    --text-2xl--line-height: calc(2 / 1.5);
    --text-3xl: 1.875rem;
    --text-3xl--line-height: calc(2.25 / 1.875);
    --font-weight-normal: 400;
    --font-weight-medium: 500;
    --font-weight-semibold: 600;
    --tracking-widest: 0.1em;
    --leading-tight: 1.25;
    --leading-snug: 1.375;
    --leading-normal: 1.5;
    --radius-xs: 0.125rem;
    --ease-in-out: cubic-bezier(0.4, 0, 0.2, 1);
    --animate-spin: spin 1s linear infinite;
    --animate-pulse: pulse 2s cubic-bezier(0.4, 0, 0.6, 1) infinite;
    --aspect-video: 16 / 9;
    --default-transition-duration: 150ms;
    --default-transition-timing-function: cubic-bezier(0.4, 0, 0.2, 1);
    --default-font-family: var(--font-geist-sans);
    --default-mono-font-family: var(--font-geist-mono);
    --color-border: var(--border);
  }
}
@layer base {
  *, ::after, ::before, ::backdrop, ::file-selector-button {
    box-sizing: border-box;
    margin: 0;
    padding: 0;
    border: 0 solid;
  }
  html, :host {
    line-height: 1.5;
    -webkit-text-size-adjust: 100%;
    -moz-tab-size: 4;
      -o-tab-size: 4;
         tab-size: 4;
    font-family: var(--default-font-family, ui-sans-serif, system-ui, sans-serif, "Apple Color Emoji", "Segoe UI Emoji", "Segoe UI Symbol", "Noto Color Emoji");
    font-feature-settings: var(--default-font-feature-settings, normal);
    font-variation-settings: var(--default-font-variation-settings, normal);
    -webkit-tap-highlight-color: transparent;
  }
  hr {
    height: 0;
    color: inherit;
    border-top-width: 1px;
  }
  abbr:where([title]) {
    -webkit-text-decoration: underline dotted;
    text-decoration: underline dotted;
  }
  h1, h2, h3, h4, h5, h6 {
    font-size: inherit;
    font-weight: inherit;
  }
  a {
    color: inherit;
    -webkit-text-decoration: inherit;
    text-decoration: inherit;
  }
  b, strong {
    font-weight: bolder;
  }
  code, kbd, samp, pre {
    font-family: var(--default-mono-font-family, ui-monospace, SFMono-Regular, Menlo, Monaco, Consolas, "Liberation Mono", "Courier New", monospace);
    font-feature-settings: var(--default-mono-font-feature-settings, normal);
    font-variation-settings: var(--default-mono-font-variation-settings, normal);
    font-size: 1em;
  }
  small {
    font-size: 80%;
  }
  sub, sup {
    font-size: 75%;
    line-height: 0;
    position: relative;
    vertical-align: baseline;
  }
  sub {
    bottom: -0.25em;
  }
  sup {
    top: -0.5em;
  }
  table {
    text-indent: 0;
    border-color: inherit;
    border-collapse: collapse;
  }
  :-moz-focusring {
    outline: auto;
  }
  progress {
    vertical-align: baseline;
  }
  summary {
    display: list-item;
  }
  ol, ul, menu {
    list-style: none;
  }
  img, svg, video, canvas, audio, iframe, embed, object {
    display: block;
    vertical-align: middle;
  }
  img, video {
    max-width: 100%;
    height: auto;
  }
  button, input, select, optgroup, textarea, ::file-selector-button {
    font: inherit;
    font-feature-settings: inherit;
    font-variation-settings: inherit;
    letter-spacing: inherit;
    color: inherit;
    border-radius: 0;
    background-color: transparent;
    opacity: 1;
  }
  :where(select:is([multiple], [size])) optgroup {
    font-weight: bolder;
  }
  :where(select:is([multiple], [size])) optgroup option {
    padding-inline-start: 20px;
  }
  ::file-selector-button {
    margin-inline-end: 4px;
  }
  ::-moz-placeholder {
    opacity: 1;
  }
  ::placeholder {
    opacity: 1;
  }
  @supports (not (-webkit-appearance: -apple-pay-button))  or (contain-intrinsic-size: 1px) {
    ::-moz-placeholder {
      color: currentcolor;
      @supports (color: color-mix(in lab, red, red)) {
        color: color-mix(in oklab, currentcolor 50%, transparent);
      }
    }
    ::placeholder {
      color: currentcolor;
      @supports (color: color-mix(in lab, red, red)) {
        color: color-mix(in oklab, currentcolor 50%, transparent);
      }
    }
  }
  textarea {
    resize: vertical;
  }
  ::-webkit-search-decoration {
    -webkit-appearance: none;
  }
  ::-webkit-date-and-time-value {
    min-height: 1lh;
    text-align: inherit;
  }
  ::-webkit-datetime-edit {
    display: inline-flex;
  }
  ::-webkit-datetime-edit-fields-wrapper {
    padding: 0;
  }
  ::-webkit-datetime-edit, ::-webkit-datetime-edit-year-field, ::-webkit-datetime-edit-month-field, ::-webkit-datetime-edit-day-field, ::-webkit-datetime-edit-hour-field, ::-webkit-datetime-edit-minute-field, ::-webkit-datetime-edit-second-field, ::-webkit-datetime-edit-millisecond-field, ::-webkit-datetime-edit-meridiem-field {
    padding-block: 0;
  }
  ::-webkit-calendar-picker-indicator {
    line-height: 1;
  }
  :-moz-ui-invalid {
    box-shadow: none;
  }
  button, input:where([type="button"], [type="reset"], [type="submit"]), ::file-selector-button {
    -webkit-appearance: button;
       -moz-appearance: button;
            appearance: button;
  }
  ::-webkit-inner-spin-button, ::-webkit-outer-spin-button {
    height: auto;
  }
  [hidden]:where(:not([hidden="until-found"])) {
    display: none !important;
  }
}
@layer utilities;
@property --tw-animation-delay {
  syntax: "*";
  inherits: false;
  initial-value: 0s;
}
@property --tw-animation-direction {
  syntax: "*";
  inherits: false;
  initial-value: normal;
}
@property --tw-animation-duration {
  syntax: "*";
  inherits: false;
}
@property --tw-animation-fill-mode {
  syntax: "*";
  inherits: false;
  initial-value: none;
}
@property --tw-animation-iteration-count {
  syntax: "*";
  inherits: false;
  initial-value: 1;
}
@property --tw-enter-blur {
  syntax: "*";
  inherits: false;
  initial-value: 0;
}
@property --tw-enter-opacity {
  syntax: "*";
  inherits: false;
  initial-value: 1;
}
@property --tw-enter-rotate {
  syntax: "*";
  inherits: false;
  initial-value: 0;
}
@property --tw-enter-scale {
  syntax: "*";
  inherits: false;
  initial-value: 1;
}
@property --tw-enter-translate-x {
  syntax: "*";
  inherits: false;
  initial-value: 0;
}
@property --tw-enter-translate-y {
  syntax: "*";
  inherits: false;
  initial-value: 0;
}
@property --tw-exit-blur {
  syntax: "*";
  inherits: false;
  initial-value: 0;
}
@property --tw-exit-opacity {
  syntax: "*";
  inherits: false;
  initial-value: 1;
}
@property --tw-exit-rotate {
  syntax: "*";
  inherits: false;
  initial-value: 0;
}
@property --tw-exit-scale {
  syntax: "*";
  inherits: false;
  initial-value: 1;
}
@property --tw-exit-translate-x {
  syntax: "*";
  inherits: false;
  initial-value: 0;
}
@property --tw-exit-translate-y {
  syntax: "*";
  inherits: false;
  initial-value: 0;
}
:root {
  --radius: 0.625rem;
  --background: oklch(1 0 0);
  --foreground: oklch(0.145 0 0);
  --card: oklch(1 0 0);
  --card-foreground: oklch(0.145 0 0);
  --popover: oklch(1 0 0);
  --popover-foreground: oklch(0.145 0 0);
  --primary: oklch(0.205 0 0);
  --primary-foreground: oklch(0.985 0 0);
  --secondary: oklch(0.97 0 0);
  --secondary-foreground: oklch(0.205 0 0);
  --muted: oklch(0.97 0 0);
  --muted-foreground: oklch(0.556 0 0);
  --accent: oklch(0.97 0 0);
  --accent-foreground: oklch(0.205 0 0);
  --destructive: oklch(0.577 0.245 27.325);
  --border: oklch(0.922 0 0);
  --input: oklch(0.922 0 0);
  --ring: oklch(0.708 0 0);
  --chart-1: oklch(0.646 0.222 41.116);
  --chart-2: oklch(0.6 0.118 184.704);
  --chart-3: oklch(0.398 0.07 227.392);
  --chart-4: oklch(0.828 0.189 84.429);
  --chart-5: oklch(0.769 0.188 70.08);
  --sidebar: oklch(0.985 0 0);
  --sidebar-foreground: oklch(0.145 0 0);
  --sidebar-primary: oklch(0.205 0 0);
  --sidebar-primary-foreground: oklch(0.985 0 0);
  --sidebar-accent: oklch(0.97 0 0);
  --sidebar-accent-foreground: oklch(0.205 0 0);
  --sidebar-border: oklch(0.922 0 0);
  --sidebar-ring: oklch(0.708 0 0);
}
.dark {
  --background: oklch(0.145 0 0);
  --foreground: oklch(0.985 0 0);
  --card: oklch(0.205 0 0);
  --card-foreground: oklch(0.985 0 0);
  --popover: oklch(0.205 0 0);
  --popover-foreground: oklch(0.985 0 0);
  --primary: oklch(0.922 0 0);
  --primary-foreground: oklch(0.205 0 0);
  --secondary: oklch(0.269 0 0);
  --secondary-foreground: oklch(0.985 0 0);
  --muted: oklch(0.269 0 0);
  --muted-foreground: oklch(0.708 0 0);
  --accent: oklch(0.269 0 0);
  --accent-foreground: oklch(0.985 0 0);
  --destructive: oklch(0.704 0.191 22.216);
  --border: oklch(1 0 0 / 10%);
  --input: oklch(1 0 0 / 15%);
  --ring: oklch(0.556 0 0);
  --chart-1: oklch(0.488 0.243 264.376);
  --chart-2: oklch(0.696 0.17 162.48);
  --chart-3: oklch(0.769 0.188 70.08);
  --chart-4: oklch(0.627 0.265 303.9);
  --chart-5: oklch(0.645 0.246 16.439);
  --sidebar: oklch(0.205 0 0);
  --sidebar-foreground: oklch(0.985 0 0);
  --sidebar-primary: oklch(0.488 0.243 264.376);
  --sidebar-primary-foreground: oklch(0.985 0 0);
  --sidebar-accent: oklch(0.269 0 0);
  --sidebar-accent-foreground: oklch(0.985 0 0);
  --sidebar-border: oklch(1 0 0 / 10%);
  --sidebar-ring: oklch(0.556 0 0);
}
@layer base {
  * {
    border-color: var(--border);
    outline-color: var(--ring);
    @supports (color: color-mix(in lab, red, red)) {
      outline-color: color-mix(in oklab, var(--ring) 50%, transparent);
    }
  }
  body {
    background-color: var(--background);
    color: var(--foreground);
  }
}
@property --tw-translate-x {
  syntax: "*";
  inherits: false;
  initial-value: 0;
}
@property --tw-translate-y {
  syntax: "*";
  inherits: false;
  initial-value: 0;
}
@property --tw-translate-z {
  syntax: "*";
  inherits: false;
  initial-value: 0;
}
@property --tw-scale-x {
  syntax: "*";
  inherits: false;
  initial-value: 1;
}
@property --tw-scale-y {
  syntax: "*";
  inherits: false;
  initial-value: 1;
}
@property --tw-scale-z {
  syntax: "*";
  inherits: false;
  initial-value: 1;
}
@property --tw-rotate-x {
  syntax: "*";
  inherits: false;
}
@property --tw-rotate-y {
  syntax: "*";
  inherits: false;
}
@property --tw-rotate-z {
  syntax: "*";
  inherits: false;
}
@property --tw-skew-x {
  syntax: "*";
  inherits: false;
}
@property --tw-skew-y {
  syntax: "*";
  inherits: false;
}
@property --tw-space-y-reverse {
  syntax: "*";
  inherits: false;
  initial-value: 0;
}
@property --tw-border-style {
  syntax: "*";
  inherits: false;
  initial-value: solid;
}
@property --tw-leading {
  syntax: "*";
  inherits: false;
}
@property --tw-font-weight {
  syntax: "*";
  inherits: false;
}
@property --tw-tracking {
  syntax: "*";
  inherits: false;
}
@property --tw-ordinal {
  syntax: "*";
  inherits: false;
}
@property --tw-slashed-zero {
  syntax: "*";
  inherits: false;
}
@property --tw-numeric-figure {
  syntax: "*";
  inherits: false;
}
@property --tw-numeric-spacing {
  syntax: "*";
  inherits: false;
}
@property --tw-numeric-fraction {
  syntax: "*";
  inherits: false;
}
@property --tw-shadow {
  syntax: "*";
  inherits: false;
  initial-value: 0 0 #0000;
}
@property --tw-shadow-color {
  syntax: "*";
  inherits: false;
}
@property --tw-shadow-alpha {
  syntax: "<percentage>";
  inherits: false;
  initial-value: 100%;
}
@property --tw-inset-shadow {
  syntax: "*";
  inherits: false;
  initial-value: 0 0 #0000;
}
@property --tw-inset-shadow-color {
  syntax: "*";
  inherits: false;
}
@property --tw-inset-shadow-alpha {
  syntax: "<percentage>";
  inherits: false;
  initial-value: 100%;
}
@property --tw-ring-color {
  syntax: "*";
  inherits: false;
}
@property --tw-ring-shadow {
  syntax: "*";
  inherits: false;
  initial-value: 0 0 #0000;
}
@property --tw-inset-ring-color {
  syntax: "*";
  inherits: false;
}
@property --tw-inset-ring-shadow {
  syntax: "*";
  inherits: false;
  initial-value: 0 0 #0000;
}
@property --tw-ring-inset {
  syntax: "*";
  inherits: false;
}
@property --tw-ring-offset-width {
  syntax: "<length>";
  inherits: false;
  initial-value: 0px;
}
@property --tw-ring-offset-color {
  syntax: "*";
  inherits: false;
  initial-value: #fff;
}
@property --tw-ring-offset-shadow {
  syntax: "*";
  inherits: false;
  initial-value: 0 0 #0000;
}
@property --tw-outline-style {
  syntax: "*";
  inherits: false;
  initial-value: solid;
}
@property --tw-blur {
  syntax: "*";
  inherits: false;
}
@property --tw-brightness {
  syntax: "*";
  inherits: false;
}
@property --tw-contrast {
  syntax: "*";
  inherits: false;
}
@property --tw-grayscale {
  syntax: "*";
  inherits: false;
}
@property --tw-hue-rotate {
  syntax: "*";
  inherits: false;
}
@property --tw-invert {
  syntax: "*";
  inherits: false;
}
@property --tw-opacity {
  syntax: "*";
  inherits: false;
}
@property --tw-saturate {
  syntax: "*";
  inherits: false;
}
@property --tw-sepia {
  syntax: "*";
  inherits: false;
}
@property --tw-drop-shadow {
  syntax: "*";
  inherits: false;
}
@property --tw-drop-shadow-color {
  syntax: "*";
  inherits: false;
}
@property --tw-drop-shadow-alpha {
  syntax: "<percentage>";
  inherits: false;
  initial-value: 100%;
}
@property --tw-drop-shadow-size {
  syntax: "*";
  inherits: false;
}
@property --tw-duration {
  syntax: "*";
  inherits: false;
}
@property --tw-ease {
  syntax: "*";
  inherits: false;
}
@property --tw-content {
  syntax: "*";
  initial-value: "";
  inherits: false;
}
@property --tw-gradient-position {
  syntax: "*";
  inherits: false;
}
@property --tw-gradient-from {
  syntax: "<color>";
  inherits: false;
  initial-value: #0000;
}
@property --tw-gradient-via {
  syntax: "<color>";
  inherits: false;
  initial-value: #0000;
}
@property --tw-gradient-to {
  syntax: "<color>";
  inherits: false;
  initial-value: #0000;
}
@property --tw-gradient-stops {
  syntax: "*";
  inherits: false;
}
@property --tw-gradient-via-stops {
  syntax: "*";
  inherits: false;
}
@property --tw-gradient-from-position {
  syntax: "<length-percentage>";
  inherits: false;
  initial-value: 0%;
}
@property --tw-gradient-via-position {
  syntax: "<length-percentage>";
  inherits: false;
  initial-value: 50%;
}
@property --tw-gradient-to-position {
  syntax: "<length-percentage>";
  inherits: false;
  initial-value: 100%;
}
@keyframes spin {
  to {
    transform: rotate(360deg);
  }
}
@keyframes pulse {
  50% {
    opacity: 0.5;
  }
}
@keyframes enter {
  from {
    opacity: var(--tw-enter-opacity,1);
    transform: translate3d(var(--tw-enter-translate-x,0),var(--tw-enter-translate-y,0),0)scale3d(var(--tw-enter-scale,1),var(--tw-enter-scale,1),var(--tw-enter-scale,1))rotate(var(--tw-enter-rotate,0));
    filter: blur(var(--tw-enter-blur,0));
  }
}
@keyframes exit {
  to {
    opacity: var(--tw-exit-opacity,1);
    transform: translate3d(var(--tw-exit-translate-x,0),var(--tw-exit-translate-y,0),0)scale3d(var(--tw-exit-scale,1),var(--tw-exit-scale,1),var(--tw-exit-scale,1))rotate(var(--tw-exit-rotate,0));
    filter: blur(var(--tw-exit-blur,0));
  }
}
@layer properties {
  @supports ((-webkit-hyphens: none) and (not (margin-trim: inline))) or ((-moz-orient: inline) and (not (color:rgb(from red r g b)))) {
    *, ::before, ::after, ::backdrop {
      --tw-translate-x: 0;
      --tw-translate-y: 0;
      --tw-translate-z: 0;
      --tw-scale-x: 1;
      --tw-scale-y: 1;
      --tw-scale-z: 1;
      --tw-rotate-x: initial;
      --tw-rotate-y: initial;
      --tw-rotate-z: initial;
      --tw-skew-x: initial;
      --tw-skew-y: initial;
      --tw-space-y-reverse: 0;
      --tw-border-style: solid;
      --tw-leading: initial;
      --tw-font-weight: initial;
      --tw-tracking: initial;
      --tw-ordinal: initial;
      --tw-slashed-zero: initial;
      --tw-numeric-figure: initial;
      --tw-numeric-spacing: initial;
      --tw-numeric-fraction: initial;
      --tw-shadow: 0 0 #0000;
      --tw-shadow-color: initial;
      --tw-shadow-alpha: 100%;
      --tw-inset-shadow: 0 0 #0000;
      --tw-inset-shadow-color: initial;
      --tw-inset-shadow-alpha: 100%;
      --tw-ring-color: initial;
      --tw-ring-shadow: 0 0 #0000;
      --tw-inset-ring-color: initial;
      --tw-inset-ring-shadow: 0 0 #0000;
      --tw-ring-inset: initial;
      --tw-ring-offset-width: 0px;
      --tw-ring-offset-color: #fff;
      --tw-ring-offset-shadow: 0 0 #0000;
      --tw-outline-style: solid;
      --tw-blur: initial;
      --tw-brightness: initial;
      --tw-contrast: initial;
      --tw-grayscale: initial;
      --tw-hue-rotate: initial;
      --tw-invert: initial;
      --tw-opacity: initial;
      --tw-saturate: initial;
      --tw-sepia: initial;
      --tw-drop-shadow: initial;
      --tw-drop-shadow-color: initial;
      --tw-drop-shadow-alpha: 100%;
      --tw-drop-shadow-size: initial;
      --tw-duration: initial;
      --tw-ease: initial;
      --tw-content: "";
      --tw-gradient-position: initial;
      --tw-gradient-from: #0000;
      --tw-gradient-via: #0000;
      --tw-gradient-to: #0000;
      --tw-gradient-stops: initial;
      --tw-gradient-via-stops: initial;
      --tw-gradient-from-position: 0%;
      --tw-gradient-via-position: 50%;
      --tw-gradient-to-position: 100%;
      --tw-animation-delay: 0s;
      --tw-animation-direction: normal;
      --tw-animation-duration: initial;
      --tw-animation-fill-mode: none;
      --tw-animation-iteration-count: 1;
      --tw-enter-blur: 0;
      --tw-enter-opacity: 1;
      --tw-enter-rotate: 0;
      --tw-enter-scale: 1;
      --tw-enter-translate-x: 0;
      --tw-enter-translate-y: 0;
      --tw-exit-blur: 0;
      --tw-exit-opacity: 1;
      --tw-exit-rotate: 0;
      --tw-exit-scale: 1;
      --tw-exit-translate-x: 0;
      --tw-exit-translate-y: 0;
    }
  }
}

